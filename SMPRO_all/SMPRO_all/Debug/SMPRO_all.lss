
SMPRO_all.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ea  00800100  000011e0  00001274  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  008001ea  008001ea  0000135e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000135e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000013bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  000013fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000015f5  00000000  00000000  0000154c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c87  00000000  00000000  00002b41  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d61  00000000  00000000  000037c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000047c  00000000  00000000  0000452c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000065b  00000000  00000000  000049a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001319  00000000  00000000  00005003  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000238  00000000  00000000  0000631c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e0 ee       	ldi	r30, 0xE0	; 224
     17e:	f1 e1       	ldi	r31, 0x11	; 17
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	aa 3e       	cpi	r26, 0xEA	; 234
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	aa ee       	ldi	r26, 0xEA	; 234
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a0 3f       	cpi	r26, 0xF0	; 240
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 6f 02 	call	0x4de	; 0x4de <main>
     1a0:	0c 94 ee 08 	jmp	0x11dc	; 0x11dc <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <read_one_value>:
	
	temp_setting.distance = get_distance(); 
	temp_setting.time = get_time(); 
	return (temp_setting); 
}*/
void read_one_value(int *distance, int *time){
     1a8:	2f 92       	push	r2
     1aa:	3f 92       	push	r3
     1ac:	4f 92       	push	r4
     1ae:	5f 92       	push	r5
     1b0:	6f 92       	push	r6
     1b2:	7f 92       	push	r7
     1b4:	8f 92       	push	r8
     1b6:	9f 92       	push	r9
     1b8:	af 92       	push	r10
     1ba:	bf 92       	push	r11
     1bc:	cf 92       	push	r12
     1be:	df 92       	push	r13
     1c0:	ef 92       	push	r14
     1c2:	ff 92       	push	r15
     1c4:	0f 93       	push	r16
     1c6:	1f 93       	push	r17
     1c8:	cf 93       	push	r28
     1ca:	df 93       	push	r29
     1cc:	cd b7       	in	r28, 0x3d	; 61
     1ce:	de b7       	in	r29, 0x3e	; 62
     1d0:	c6 56       	subi	r28, 0x66	; 102
     1d2:	d1 09       	sbc	r29, r1
     1d4:	0f b6       	in	r0, 0x3f	; 63
     1d6:	f8 94       	cli
     1d8:	de bf       	out	0x3e, r29	; 62
     1da:	0f be       	out	0x3f, r0	; 63
     1dc:	cd bf       	out	0x3d, r28	; 61
     1de:	1c 01       	movw	r2, r24
     1e0:	a7 96       	adiw	r28, 0x27	; 39
     1e2:	7f af       	std	Y+63, r23	; 0x3f
     1e4:	6e af       	std	Y+62, r22	; 0x3e
     1e6:	a7 97       	sbiw	r28, 0x27	; 39
     1e8:	fe 01       	movw	r30, r28
     1ea:	31 96       	adiw	r30, 0x01	; 1
     1ec:	ce 01       	movw	r24, r28
     1ee:	8b 59       	subi	r24, 0x9B	; 155
     1f0:	9f 4f       	sbci	r25, 0xFF	; 255
	char readBuffer[100];
	for (int i=0;i<100;i++){
		readBuffer[i]=0;
     1f2:	11 92       	st	Z+, r1
	temp_setting.time = get_time(); 
	return (temp_setting); 
}*/
void read_one_value(int *distance, int *time){
	char readBuffer[100];
	for (int i=0;i<100;i++){
     1f4:	e8 17       	cp	r30, r24
     1f6:	f9 07       	cpc	r31, r25
     1f8:	e1 f7       	brne	.-8      	; 0x1f2 <read_one_value+0x4a>
     1fa:	8e 01       	movw	r16, r28
     1fc:	0f 5f       	subi	r16, 0xFF	; 255
     1fe:	1f 4f       	sbci	r17, 0xFF	; 255
     200:	88 24       	eor	r8, r8
     202:	8a 94       	dec	r8
     204:	98 2c       	mov	r9, r8
	int i=-1;
	while (!identifier_received) //wait for a identifier
	{
		i++;

		readBuffer[i]=uart_getchar(stdin);
     206:	0f 2e       	mov	r0, r31
     208:	fa ee       	ldi	r31, 0xEA	; 234
     20a:	ef 2e       	mov	r14, r31
     20c:	f1 e0       	ldi	r31, 0x01	; 1
     20e:	ff 2e       	mov	r15, r31
     210:	f0 2d       	mov	r31, r0
     212:	01 c0       	rjmp	.+2      	; 0x216 <read_one_value+0x6e>
	}
	int identifier_received=0;
	int i=-1;
	while (!identifier_received) //wait for a identifier
	{
		i++;
     214:	43 01       	movw	r8, r6
     216:	34 01       	movw	r6, r8
     218:	2f ef       	ldi	r18, 0xFF	; 255
     21a:	62 1a       	sub	r6, r18
     21c:	72 0a       	sbc	r7, r18

		readBuffer[i]=uart_getchar(stdin);
     21e:	f7 01       	movw	r30, r14
     220:	80 81       	ld	r24, Z
     222:	91 81       	ldd	r25, Z+1	; 0x01
     224:	0e 94 78 03 	call	0x6f0	; 0x6f0 <uart_getchar>
     228:	f8 01       	movw	r30, r16
     22a:	81 93       	st	Z+, r24
     22c:	8f 01       	movw	r16, r30
		
		if(readBuffer[i] == 0x71){ //A number is arriving
     22e:	81 37       	cpi	r24, 0x71	; 113
     230:	89 f7       	brne	.-30     	; 0x214 <read_one_value+0x6c>
			int old_i=i; //pointing to first element of array
			while(i<old_i+7){
     232:	64 01       	movw	r12, r8
     234:	f8 e0       	ldi	r31, 0x08	; 8
     236:	cf 0e       	add	r12, r31
     238:	d1 1c       	adc	r13, r1
     23a:	6c 14       	cp	r6, r12
     23c:	7d 04       	cpc	r7, r13
     23e:	34 f5       	brge	.+76     	; 0x28c <read_one_value+0xe4>
     240:	ce 01       	movw	r24, r28
     242:	86 0d       	add	r24, r6
     244:	97 1d       	adc	r25, r7
     246:	9c 01       	movw	r18, r24
     248:	2e 5f       	subi	r18, 0xFE	; 254
     24a:	3f 4f       	sbci	r19, 0xFF	; 255
     24c:	79 01       	movw	r14, r18
	}
	int identifier_received=0;
	int i=-1;
	while (!identifier_received) //wait for a identifier
	{
		i++;
     24e:	83 01       	movw	r16, r6
		
		if(readBuffer[i] == 0x71){ //A number is arriving
			int old_i=i; //pointing to first element of array
			while(i<old_i+7){
				i++;
				readBuffer[i]=uart_getchar(stdin);
     250:	0f 2e       	mov	r0, r31
     252:	fa ee       	ldi	r31, 0xEA	; 234
     254:	af 2e       	mov	r10, r31
     256:	f1 e0       	ldi	r31, 0x01	; 1
     258:	bf 2e       	mov	r11, r31
     25a:	f0 2d       	mov	r31, r0
		readBuffer[i]=uart_getchar(stdin);
		
		if(readBuffer[i] == 0x71){ //A number is arriving
			int old_i=i; //pointing to first element of array
			while(i<old_i+7){
				i++;
     25c:	0f 5f       	subi	r16, 0xFF	; 255
     25e:	1f 4f       	sbci	r17, 0xFF	; 255
				readBuffer[i]=uart_getchar(stdin);
     260:	f5 01       	movw	r30, r10
     262:	80 81       	ld	r24, Z
     264:	91 81       	ldd	r25, Z+1	; 0x01
     266:	0e 94 78 03 	call	0x6f0	; 0x6f0 <uart_getchar>
     26a:	f7 01       	movw	r30, r14
     26c:	81 93       	st	Z+, r24
     26e:	7f 01       	movw	r14, r30

		readBuffer[i]=uart_getchar(stdin);
		
		if(readBuffer[i] == 0x71){ //A number is arriving
			int old_i=i; //pointing to first element of array
			while(i<old_i+7){
     270:	0c 15       	cp	r16, r12
     272:	1d 05       	cpc	r17, r13
     274:	9c f3       	brlt	.-26     	; 0x25c <read_one_value+0xb4>
     276:	84 01       	movw	r16, r8
     278:	08 5f       	subi	r16, 0xF8	; 248
     27a:	1f 4f       	sbci	r17, 0xFF	; 255
				i++;
				readBuffer[i]=uart_getchar(stdin);
			}
			identifier_received=3;
			if(readBuffer[old_i]==0x71 && readBuffer[old_i+5]==0xFF && readBuffer[old_i+6]==0xFF && readBuffer[old_i+7]==0xFF){ //Check format
     27c:	fe 01       	movw	r30, r28
     27e:	e6 0d       	add	r30, r6
     280:	f7 1d       	adc	r31, r7
     282:	81 81       	ldd	r24, Z+1	; 0x01
     284:	81 37       	cpi	r24, 0x71	; 113
     286:	09 f0       	breq	.+2      	; 0x28a <read_one_value+0xe2>
     288:	c1 c0       	rjmp	.+386    	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     28a:	01 c0       	rjmp	.+2      	; 0x28e <read_one_value+0xe6>
	}
	int identifier_received=0;
	int i=-1;
	while (!identifier_received) //wait for a identifier
	{
		i++;
     28c:	83 01       	movw	r16, r6
			while(i<old_i+7){
				i++;
				readBuffer[i]=uart_getchar(stdin);
			}
			identifier_received=3;
			if(readBuffer[old_i]==0x71 && readBuffer[old_i+5]==0xFF && readBuffer[old_i+6]==0xFF && readBuffer[old_i+7]==0xFF){ //Check format
     28e:	fe 01       	movw	r30, r28
     290:	e8 0d       	add	r30, r8
     292:	f9 1d       	adc	r31, r9
     294:	87 81       	ldd	r24, Z+7	; 0x07
     296:	8f 3f       	cpi	r24, 0xFF	; 255
     298:	09 f0       	breq	.+2      	; 0x29c <read_one_value+0xf4>
     29a:	be c0       	rjmp	.+380    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     29c:	fe 01       	movw	r30, r28
     29e:	e8 0d       	add	r30, r8
     2a0:	f9 1d       	adc	r31, r9
     2a2:	80 85       	ldd	r24, Z+8	; 0x08
     2a4:	8f 3f       	cpi	r24, 0xFF	; 255
     2a6:	09 f0       	breq	.+2      	; 0x2aa <read_one_value+0x102>
     2a8:	bd c0       	rjmp	.+378    	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
     2aa:	fe 01       	movw	r30, r28
     2ac:	ec 0d       	add	r30, r12
     2ae:	fd 1d       	adc	r31, r13
     2b0:	81 81       	ldd	r24, Z+1	; 0x01
     2b2:	8f 3f       	cpi	r24, 0xFF	; 255
     2b4:	09 f0       	breq	.+2      	; 0x2b8 <read_one_value+0x110>
     2b6:	bc c0       	rjmp	.+376    	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
				if(readBuffer[old_i+1] == 0x10 && readBuffer[old_i+2] == 0x27 && readBuffer[old_i+3] == 0x00 && readBuffer[old_i+4] == 0x00){ //first identifier
     2b8:	fe 01       	movw	r30, r28
     2ba:	e8 0d       	add	r30, r8
     2bc:	f9 1d       	adc	r31, r9
     2be:	83 81       	ldd	r24, Z+3	; 0x03
     2c0:	80 31       	cpi	r24, 0x10	; 16
     2c2:	b9 f4       	brne	.+46     	; 0x2f2 <read_one_value+0x14a>
     2c4:	fe 01       	movw	r30, r28
     2c6:	e8 0d       	add	r30, r8
     2c8:	f9 1d       	adc	r31, r9
     2ca:	84 81       	ldd	r24, Z+4	; 0x04
     2cc:	87 32       	cpi	r24, 0x27	; 39
     2ce:	09 f0       	breq	.+2      	; 0x2d2 <read_one_value+0x12a>
     2d0:	b5 c0       	rjmp	.+362    	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     2d2:	fe 01       	movw	r30, r28
     2d4:	e8 0d       	add	r30, r8
     2d6:	f9 1d       	adc	r31, r9
     2d8:	85 81       	ldd	r24, Z+5	; 0x05
     2da:	81 11       	cpse	r24, r1
     2dc:	b5 c0       	rjmp	.+362    	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
     2de:	fe 01       	movw	r30, r28
     2e0:	e8 0d       	add	r30, r8
     2e2:	f9 1d       	adc	r31, r9
     2e4:	86 81       	ldd	r24, Z+6	; 0x06
     2e6:	81 11       	cpse	r24, r1
     2e8:	b5 c0       	rjmp	.+362    	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
					identifier_received=1;
     2ea:	44 24       	eor	r4, r4
     2ec:	43 94       	inc	r4
     2ee:	51 2c       	mov	r5, r1
     2f0:	ce c0       	rjmp	.+412    	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
				}else if(readBuffer[old_i+1] == 0x20 && readBuffer[old_i+2] == 0x4E && readBuffer[old_i+3] == 0x00 && readBuffer[old_i+4] == 0x00){ //second identifier
     2f2:	80 32       	cpi	r24, 0x20	; 32
     2f4:	09 f0       	breq	.+2      	; 0x2f8 <read_one_value+0x150>
     2f6:	b4 c0       	rjmp	.+360    	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
     2f8:	fe 01       	movw	r30, r28
     2fa:	e8 0d       	add	r30, r8
     2fc:	f9 1d       	adc	r31, r9
     2fe:	84 81       	ldd	r24, Z+4	; 0x04
     300:	8e 34       	cpi	r24, 0x4E	; 78
     302:	09 f0       	breq	.+2      	; 0x306 <read_one_value+0x15e>
     304:	b3 c0       	rjmp	.+358    	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
     306:	fe 01       	movw	r30, r28
     308:	e8 0d       	add	r30, r8
     30a:	f9 1d       	adc	r31, r9
     30c:	85 81       	ldd	r24, Z+5	; 0x05
     30e:	81 11       	cpse	r24, r1
     310:	b3 c0       	rjmp	.+358    	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
     312:	fe 01       	movw	r30, r28
     314:	e8 0d       	add	r30, r8
     316:	f9 1d       	adc	r31, r9
     318:	86 81       	ldd	r24, Z+6	; 0x06
     31a:	81 11       	cpse	r24, r1
     31c:	b3 c0       	rjmp	.+358    	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
					identifier_received=2;
     31e:	68 94       	set
     320:	44 24       	eor	r4, r4
     322:	41 f8       	bld	r4, 1
     324:	51 2c       	mov	r5, r1
     326:	b3 c0       	rjmp	.+358    	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
	}
	if(identifier_received){
		int number_received=0;
		while (!number_received)
		{
			readBuffer[i]=uart_getchar(stdin);
     328:	f6 01       	movw	r30, r12
     32a:	80 81       	ld	r24, Z
     32c:	91 81       	ldd	r25, Z+1	; 0x01
     32e:	0e 94 78 03 	call	0x6f0	; 0x6f0 <uart_getchar>
     332:	f7 01       	movw	r30, r14
     334:	81 93       	st	Z+, r24
     336:	7f 01       	movw	r14, r30
			if(readBuffer[i]== 0x71){ //A number is arriving
     338:	81 37       	cpi	r24, 0x71	; 113
     33a:	09 f4       	brne	.+2      	; 0x33e <read_one_value+0x196>
     33c:	4d c0       	rjmp	.+154    	; 0x3d8 <read_one_value+0x230>
				number_received=1;
			}
			i++;
     33e:	0f 5f       	subi	r16, 0xFF	; 255
     340:	1f 4f       	sbci	r17, 0xFF	; 255
     342:	f2 cf       	rjmp	.-28     	; 0x328 <read_one_value+0x180>
		}
		int old_i=i-1; //pointing to first element of array
		for(i;i<old_i+7+1;i++){
			readBuffer[i]=uart_getchar(stdin);;
     344:	f4 01       	movw	r30, r8
     346:	80 81       	ld	r24, Z
     348:	91 81       	ldd	r25, Z+1	; 0x01
     34a:	0e 94 78 03 	call	0x6f0	; 0x6f0 <uart_getchar>
     34e:	f7 01       	movw	r30, r14
     350:	81 93       	st	Z+, r24
     352:	7f 01       	movw	r14, r30
				number_received=1;
			}
			i++;
		}
		int old_i=i-1; //pointing to first element of array
		for(i;i<old_i+7+1;i++){
     354:	ff ef       	ldi	r31, 0xFF	; 255
     356:	6f 1a       	sub	r6, r31
     358:	7f 0a       	sbc	r7, r31
     35a:	6a 14       	cp	r6, r10
     35c:	7b 04       	cpc	r7, r11
     35e:	94 f3       	brlt	.-28     	; 0x344 <read_one_value+0x19c>
			readBuffer[i]=uart_getchar(stdin);;
		}
		if(readBuffer[old_i]==0x71 && readBuffer[old_i+5]==0xFF && readBuffer[old_i+6]==0xFF && readBuffer[old_i+7]==0xFF){ //Check format
     360:	fe 01       	movw	r30, r28
     362:	e0 0f       	add	r30, r16
     364:	f1 1f       	adc	r31, r17
     366:	81 81       	ldd	r24, Z+1	; 0x01
     368:	81 37       	cpi	r24, 0x71	; 113
     36a:	09 f0       	breq	.+2      	; 0x36e <read_one_value+0x1c6>
     36c:	9e c0       	rjmp	.+316    	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
     36e:	fe 01       	movw	r30, r28
     370:	e0 0f       	add	r30, r16
     372:	f1 1f       	adc	r31, r17
     374:	86 81       	ldd	r24, Z+6	; 0x06
     376:	8f 3f       	cpi	r24, 0xFF	; 255
     378:	09 f0       	breq	.+2      	; 0x37c <read_one_value+0x1d4>
     37a:	97 c0       	rjmp	.+302    	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
     37c:	fe 01       	movw	r30, r28
     37e:	e0 0f       	add	r30, r16
     380:	f1 1f       	adc	r31, r17
     382:	87 81       	ldd	r24, Z+7	; 0x07
     384:	8f 3f       	cpi	r24, 0xFF	; 255
     386:	09 f0       	breq	.+2      	; 0x38a <read_one_value+0x1e2>
     388:	90 c0       	rjmp	.+288    	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
     38a:	fe 01       	movw	r30, r28
     38c:	e0 0f       	add	r30, r16
     38e:	f1 1f       	adc	r31, r17
     390:	80 85       	ldd	r24, Z+8	; 0x08
     392:	8f 3f       	cpi	r24, 0xFF	; 255
     394:	09 f0       	breq	.+2      	; 0x398 <read_one_value+0x1f0>
     396:	89 c0       	rjmp	.+274    	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
			uint32_t readValue = readBuffer[old_i+1] | (readBuffer[old_i+2] << 8) | (readBuffer[old_i+3] << 16)| (readBuffer[old_i+4] << 24);
     398:	fe 01       	movw	r30, r28
     39a:	e0 0f       	add	r30, r16
     39c:	f1 1f       	adc	r31, r17
     39e:	83 81       	ldd	r24, Z+3	; 0x03
     3a0:	90 e0       	ldi	r25, 0x00	; 0
     3a2:	98 2f       	mov	r25, r24
     3a4:	88 27       	eor	r24, r24
     3a6:	fe 01       	movw	r30, r28
     3a8:	ec 0d       	add	r30, r12
     3aa:	fd 1d       	adc	r31, r13
     3ac:	21 81       	ldd	r18, Z+1	; 0x01
     3ae:	82 2b       	or	r24, r18
			if(identifier_received==1){
     3b0:	21 e0       	ldi	r18, 0x01	; 1
     3b2:	42 16       	cp	r4, r18
     3b4:	51 04       	cpc	r5, r1
     3b6:	21 f4       	brne	.+8      	; 0x3c0 <read_one_value+0x218>
				*distance=readValue;
     3b8:	f1 01       	movw	r30, r2
     3ba:	91 83       	std	Z+1, r25	; 0x01
     3bc:	80 83       	st	Z, r24
     3be:	75 c0       	rjmp	.+234    	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
			}else if (identifier_received==2){
     3c0:	f2 e0       	ldi	r31, 0x02	; 2
     3c2:	4f 16       	cp	r4, r31
     3c4:	51 04       	cpc	r5, r1
     3c6:	09 f0       	breq	.+2      	; 0x3ca <read_one_value+0x222>
     3c8:	70 c0       	rjmp	.+224    	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
				*time=readValue;
     3ca:	a7 96       	adiw	r28, 0x27	; 39
     3cc:	ee ad       	ldd	r30, Y+62	; 0x3e
     3ce:	ff ad       	ldd	r31, Y+63	; 0x3f
     3d0:	a7 97       	sbiw	r28, 0x27	; 39
     3d2:	91 83       	std	Z+1, r25	; 0x01
     3d4:	80 83       	st	Z, r24
			}
		}
	}
     3d6:	69 c0       	rjmp	.+210    	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
		{
			readBuffer[i]=uart_getchar(stdin);
			if(readBuffer[i]== 0x71){ //A number is arriving
				number_received=1;
			}
			i++;
     3d8:	68 01       	movw	r12, r16
     3da:	ff ef       	ldi	r31, 0xFF	; 255
     3dc:	cf 1a       	sub	r12, r31
     3de:	df 0a       	sbc	r13, r31
		}
		int old_i=i-1; //pointing to first element of array
		for(i;i<old_i+7+1;i++){
     3e0:	58 01       	movw	r10, r16
     3e2:	28 e0       	ldi	r18, 0x08	; 8
     3e4:	a2 0e       	add	r10, r18
     3e6:	b1 1c       	adc	r11, r1
     3e8:	ca 14       	cp	r12, r10
     3ea:	db 04       	cpc	r13, r11
     3ec:	0c f0       	brlt	.+2      	; 0x3f0 <read_one_value+0x248>
     3ee:	b8 cf       	rjmp	.-144    	; 0x360 <read_one_value+0x1b8>
     3f0:	ce 01       	movw	r24, r28
     3f2:	80 0f       	add	r24, r16
     3f4:	91 1f       	adc	r25, r17
     3f6:	fc 01       	movw	r30, r24
     3f8:	32 96       	adiw	r30, 0x02	; 2
     3fa:	7f 01       	movw	r14, r30
     3fc:	36 01       	movw	r6, r12
			readBuffer[i]=uart_getchar(stdin);;
     3fe:	0f 2e       	mov	r0, r31
     400:	fa ee       	ldi	r31, 0xEA	; 234
     402:	8f 2e       	mov	r8, r31
     404:	f1 e0       	ldi	r31, 0x01	; 1
     406:	9f 2e       	mov	r9, r31
     408:	f0 2d       	mov	r31, r0
     40a:	9c cf       	rjmp	.-200    	; 0x344 <read_one_value+0x19c>
			int old_i=i; //pointing to first element of array
			while(i<old_i+7){
				i++;
				readBuffer[i]=uart_getchar(stdin);
			}
			identifier_received=3;
     40c:	0f 2e       	mov	r0, r31
     40e:	f3 e0       	ldi	r31, 0x03	; 3
     410:	4f 2e       	mov	r4, r31
     412:	51 2c       	mov	r5, r1
     414:	f0 2d       	mov	r31, r0
     416:	3b c0       	rjmp	.+118    	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     418:	0f 2e       	mov	r0, r31
     41a:	f3 e0       	ldi	r31, 0x03	; 3
     41c:	4f 2e       	mov	r4, r31
     41e:	51 2c       	mov	r5, r1
     420:	f0 2d       	mov	r31, r0
     422:	35 c0       	rjmp	.+106    	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     424:	0f 2e       	mov	r0, r31
     426:	f3 e0       	ldi	r31, 0x03	; 3
     428:	4f 2e       	mov	r4, r31
     42a:	51 2c       	mov	r5, r1
     42c:	f0 2d       	mov	r31, r0
     42e:	2f c0       	rjmp	.+94     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     430:	0f 2e       	mov	r0, r31
     432:	f3 e0       	ldi	r31, 0x03	; 3
     434:	4f 2e       	mov	r4, r31
     436:	51 2c       	mov	r5, r1
     438:	f0 2d       	mov	r31, r0
     43a:	29 c0       	rjmp	.+82     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     43c:	0f 2e       	mov	r0, r31
     43e:	f3 e0       	ldi	r31, 0x03	; 3
     440:	4f 2e       	mov	r4, r31
     442:	51 2c       	mov	r5, r1
     444:	f0 2d       	mov	r31, r0
     446:	23 c0       	rjmp	.+70     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     448:	0f 2e       	mov	r0, r31
     44a:	f3 e0       	ldi	r31, 0x03	; 3
     44c:	4f 2e       	mov	r4, r31
     44e:	51 2c       	mov	r5, r1
     450:	f0 2d       	mov	r31, r0
     452:	1d c0       	rjmp	.+58     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     454:	0f 2e       	mov	r0, r31
     456:	f3 e0       	ldi	r31, 0x03	; 3
     458:	4f 2e       	mov	r4, r31
     45a:	51 2c       	mov	r5, r1
     45c:	f0 2d       	mov	r31, r0
     45e:	17 c0       	rjmp	.+46     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     460:	0f 2e       	mov	r0, r31
     462:	f3 e0       	ldi	r31, 0x03	; 3
     464:	4f 2e       	mov	r4, r31
     466:	51 2c       	mov	r5, r1
     468:	f0 2d       	mov	r31, r0
     46a:	11 c0       	rjmp	.+34     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     46c:	0f 2e       	mov	r0, r31
     46e:	f3 e0       	ldi	r31, 0x03	; 3
     470:	4f 2e       	mov	r4, r31
     472:	51 2c       	mov	r5, r1
     474:	f0 2d       	mov	r31, r0
     476:	0b c0       	rjmp	.+22     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     478:	0f 2e       	mov	r0, r31
     47a:	f3 e0       	ldi	r31, 0x03	; 3
     47c:	4f 2e       	mov	r4, r31
     47e:	51 2c       	mov	r5, r1
     480:	f0 2d       	mov	r31, r0
     482:	05 c0       	rjmp	.+10     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     484:	0f 2e       	mov	r0, r31
     486:	f3 e0       	ldi	r31, 0x03	; 3
     488:	4f 2e       	mov	r4, r31
     48a:	51 2c       	mov	r5, r1
     48c:	f0 2d       	mov	r31, r0
     48e:	ee 24       	eor	r14, r14
     490:	e3 94       	inc	r14
     492:	f1 2c       	mov	r15, r1
     494:	ec 0e       	add	r14, r28
     496:	fd 1e       	adc	r15, r29
     498:	e0 0e       	add	r14, r16
     49a:	f1 1e       	adc	r15, r17
	}
	if(identifier_received){
		int number_received=0;
		while (!number_received)
		{
			readBuffer[i]=uart_getchar(stdin);
     49c:	0f 2e       	mov	r0, r31
     49e:	fa ee       	ldi	r31, 0xEA	; 234
     4a0:	cf 2e       	mov	r12, r31
     4a2:	f1 e0       	ldi	r31, 0x01	; 1
     4a4:	df 2e       	mov	r13, r31
     4a6:	f0 2d       	mov	r31, r0
     4a8:	3f cf       	rjmp	.-386    	; 0x328 <read_one_value+0x180>
			}else if (identifier_received==2){
				*time=readValue;
			}
		}
	}
     4aa:	ca 59       	subi	r28, 0x9A	; 154
     4ac:	df 4f       	sbci	r29, 0xFF	; 255
     4ae:	0f b6       	in	r0, 0x3f	; 63
     4b0:	f8 94       	cli
     4b2:	de bf       	out	0x3e, r29	; 62
     4b4:	0f be       	out	0x3f, r0	; 63
     4b6:	cd bf       	out	0x3d, r28	; 61
     4b8:	df 91       	pop	r29
     4ba:	cf 91       	pop	r28
     4bc:	1f 91       	pop	r17
     4be:	0f 91       	pop	r16
     4c0:	ff 90       	pop	r15
     4c2:	ef 90       	pop	r14
     4c4:	df 90       	pop	r13
     4c6:	cf 90       	pop	r12
     4c8:	bf 90       	pop	r11
     4ca:	af 90       	pop	r10
     4cc:	9f 90       	pop	r9
     4ce:	8f 90       	pop	r8
     4d0:	7f 90       	pop	r7
     4d2:	6f 90       	pop	r6
     4d4:	5f 90       	pop	r5
     4d6:	4f 90       	pop	r4
     4d8:	3f 90       	pop	r3
     4da:	2f 90       	pop	r2
     4dc:	08 95       	ret

000004de <main>:
	}settings_t;
	
settings_t fill_array(void); 

int main(void)
{	
     4de:	cf 93       	push	r28
     4e0:	df 93       	push	r29
     4e2:	00 d0       	rcall	.+0      	; 0x4e4 <main+0x6>
     4e4:	00 d0       	rcall	.+0      	; 0x4e6 <main+0x8>
     4e6:	cd b7       	in	r28, 0x3d	; 61
     4e8:	de b7       	in	r29, 0x3e	; 62

	pwm_init();
     4ea:	0e 94 1a 03 	call	0x634	; 0x634 <pwm_init>
	lcd_init();
     4ee:	0e 94 f7 02 	call	0x5ee	; 0x5ee <lcd_init>
	op_init();
     4f2:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <op_init>
		for(int i=0;i<4;i++){
			int distance=-1;
			int time=-1;
			read_one_value(&distance,&time);
			read_one_value(&distance,&time);
			printf("distance:%d",distance);
     4f6:	0f 2e       	mov	r0, r31
     4f8:	fc e1       	ldi	r31, 0x1C	; 28
     4fa:	af 2e       	mov	r10, r31
     4fc:	f1 e0       	ldi	r31, 0x01	; 1
     4fe:	bf 2e       	mov	r11, r31
     500:	f0 2d       	mov	r31, r0
			printf("time:%d",time);
     502:	0f 2e       	mov	r0, r31
     504:	f8 e2       	ldi	r31, 0x28	; 40
     506:	cf 2e       	mov	r12, r31
     508:	f1 e0       	ldi	r31, 0x01	; 1
     50a:	df 2e       	mov	r13, r31
     50c:	f0 2d       	mov	r31, r0
	lcd_init();
	op_init();
	
	while(1){
		for(int i=0;i<4;i++){
			int distance=-1;
     50e:	ee 24       	eor	r14, r14
     510:	ea 94       	dec	r14
     512:	fe 2c       	mov	r15, r14
			read_one_value(&distance,&time);
			read_one_value(&distance,&time);
			printf("distance:%d",distance);
			printf("time:%d",time);
		}
		printf("page0.n0.val=-12%c%c%c",0xFF,0xFF,0xFF);
     514:	77 24       	eor	r7, r7
     516:	7a 94       	dec	r7
     518:	0f 2e       	mov	r0, r31
     51a:	f0 e3       	ldi	r31, 0x30	; 48
     51c:	8f 2e       	mov	r8, r31
     51e:	f1 e0       	ldi	r31, 0x01	; 1
     520:	9f 2e       	mov	r9, r31
     522:	f0 2d       	mov	r31, r0
	}settings_t;
	
settings_t fill_array(void); 

int main(void)
{	
     524:	04 e0       	ldi	r16, 0x04	; 4
     526:	10 e0       	ldi	r17, 0x00	; 0
	lcd_init();
	op_init();
	
	while(1){
		for(int i=0;i<4;i++){
			int distance=-1;
     528:	fc 82       	std	Y+4, r15	; 0x04
     52a:	eb 82       	std	Y+3, r14	; 0x03
			int time=-1;
     52c:	fa 82       	std	Y+2, r15	; 0x02
     52e:	e9 82       	std	Y+1, r14	; 0x01
			read_one_value(&distance,&time);
     530:	be 01       	movw	r22, r28
     532:	6f 5f       	subi	r22, 0xFF	; 255
     534:	7f 4f       	sbci	r23, 0xFF	; 255
     536:	ce 01       	movw	r24, r28
     538:	03 96       	adiw	r24, 0x03	; 3
     53a:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <read_one_value>
			read_one_value(&distance,&time);
     53e:	be 01       	movw	r22, r28
     540:	6f 5f       	subi	r22, 0xFF	; 255
     542:	7f 4f       	sbci	r23, 0xFF	; 255
     544:	ce 01       	movw	r24, r28
     546:	03 96       	adiw	r24, 0x03	; 3
     548:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <read_one_value>
			printf("distance:%d",distance);
     54c:	8c 81       	ldd	r24, Y+4	; 0x04
     54e:	8f 93       	push	r24
     550:	8b 81       	ldd	r24, Y+3	; 0x03
     552:	8f 93       	push	r24
     554:	bf 92       	push	r11
     556:	af 92       	push	r10
     558:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <printf>
			printf("time:%d",time);
     55c:	8a 81       	ldd	r24, Y+2	; 0x02
     55e:	8f 93       	push	r24
     560:	89 81       	ldd	r24, Y+1	; 0x01
     562:	8f 93       	push	r24
     564:	df 92       	push	r13
     566:	cf 92       	push	r12
     568:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <printf>
     56c:	01 50       	subi	r16, 0x01	; 1
     56e:	11 09       	sbc	r17, r1
	pwm_init();
	lcd_init();
	op_init();
	
	while(1){
		for(int i=0;i<4;i++){
     570:	0f b6       	in	r0, 0x3f	; 63
     572:	f8 94       	cli
     574:	de bf       	out	0x3e, r29	; 62
     576:	0f be       	out	0x3f, r0	; 63
     578:	cd bf       	out	0x3d, r28	; 61
     57a:	b1 f6       	brne	.-84     	; 0x528 <main+0x4a>
			read_one_value(&distance,&time);
			read_one_value(&distance,&time);
			printf("distance:%d",distance);
			printf("time:%d",time);
		}
		printf("page0.n0.val=-12%c%c%c",0xFF,0xFF,0xFF);
     57c:	1f 92       	push	r1
     57e:	7f 92       	push	r7
     580:	1f 92       	push	r1
     582:	7f 92       	push	r7
     584:	1f 92       	push	r1
     586:	7f 92       	push	r7
     588:	9f 92       	push	r9
     58a:	8f 92       	push	r8
     58c:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <printf>
    }
     590:	0f b6       	in	r0, 0x3f	; 63
     592:	f8 94       	cli
     594:	de bf       	out	0x3e, r29	; 62
     596:	0f be       	out	0x3f, r0	; 63
     598:	cd bf       	out	0x3d, r28	; 61
     59a:	c4 cf       	rjmp	.-120    	; 0x524 <main+0x46>

0000059c <PCA9685_init_pwm>:
	i2c_write(off_value);
	i2c_stop();
}

void PCA9685_init_pwm(unsigned char frequency)
{
     59c:	cf 93       	push	r28
     59e:	c8 2f       	mov	r28, r24
	i2c_start(PCA_ADR + I2C_WRITE);
     5a0:	80 e8       	ldi	r24, 0x80	; 128
     5a2:	0e 94 26 03 	call	0x64c	; 0x64c <i2c_start>
	i2c_write(0x00);
     5a6:	80 e0       	ldi	r24, 0x00	; 0
     5a8:	0e 94 56 03 	call	0x6ac	; 0x6ac <i2c_write>
	i2c_write(0b00110000);					// sleep and autoinc
     5ac:	80 e3       	ldi	r24, 0x30	; 48
     5ae:	0e 94 56 03 	call	0x6ac	; 0x6ac <i2c_write>
	i2c_stop();
     5b2:	0e 94 4d 03 	call	0x69a	; 0x69a <i2c_stop>
	
	i2c_start(PCA_ADR + I2C_WRITE);
     5b6:	80 e8       	ldi	r24, 0x80	; 128
     5b8:	0e 94 26 03 	call	0x64c	; 0x64c <i2c_start>
	i2c_write(0xFE);
     5bc:	8e ef       	ldi	r24, 0xFE	; 254
     5be:	0e 94 56 03 	call	0x6ac	; 0x6ac <i2c_write>
	i2c_write(frequency);					// set PWM frequency
     5c2:	8c 2f       	mov	r24, r28
     5c4:	0e 94 56 03 	call	0x6ac	; 0x6ac <i2c_write>
	i2c_stop();
     5c8:	0e 94 4d 03 	call	0x69a	; 0x69a <i2c_stop>
	
	i2c_start(PCA_ADR + I2C_WRITE);
     5cc:	80 e8       	ldi	r24, 0x80	; 128
     5ce:	0e 94 26 03 	call	0x64c	; 0x64c <i2c_start>
	i2c_write(0x00);
     5d2:	80 e0       	ldi	r24, 0x00	; 0
     5d4:	0e 94 56 03 	call	0x6ac	; 0x6ac <i2c_write>
	i2c_write(0b00100000);					// autoinc
     5d8:	80 e2       	ldi	r24, 0x20	; 32
     5da:	0e 94 56 03 	call	0x6ac	; 0x6ac <i2c_write>
	i2c_stop();
     5de:	0e 94 4d 03 	call	0x69a	; 0x69a <i2c_stop>
}
     5e2:	cf 91       	pop	r28
     5e4:	08 95       	ret

000005e6 <op_init>:
			readValue = readBuffer[1] | (readBuffer[2] << 8) | (readBuffer[3] << 16)| (readBuffer[4] << 24);
		}
	}

	return (int)readValue;
}
     5e6:	1a b8       	out	0x0a, r1	; 10
     5e8:	8f ef       	ldi	r24, 0xFF	; 255
     5ea:	8b b9       	out	0x0b, r24	; 11
     5ec:	08 95       	ret

000005ee <lcd_init>:
     5ee:	0e 94 80 03 	call	0x700	; 0x700 <uart_init>
     5f2:	0e 94 91 03 	call	0x722	; 0x722 <io_redirect>
     5f6:	1f 92       	push	r1
     5f8:	8f ef       	ldi	r24, 0xFF	; 255
     5fa:	8f 93       	push	r24
     5fc:	1f 92       	push	r1
     5fe:	8f 93       	push	r24
     600:	1f 92       	push	r1
     602:	8f 93       	push	r24
     604:	81 e8       	ldi	r24, 0x81	; 129
     606:	91 e0       	ldi	r25, 0x01	; 1
     608:	9f 93       	push	r25
     60a:	8f 93       	push	r24
     60c:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <printf>
     610:	2f ef       	ldi	r18, 0xFF	; 255
     612:	89 ef       	ldi	r24, 0xF9	; 249
     614:	90 e0       	ldi	r25, 0x00	; 0
     616:	21 50       	subi	r18, 0x01	; 1
     618:	80 40       	sbci	r24, 0x00	; 0
     61a:	90 40       	sbci	r25, 0x00	; 0
     61c:	e1 f7       	brne	.-8      	; 0x616 <lcd_init+0x28>
     61e:	00 c0       	rjmp	.+0      	; 0x620 <lcd_init+0x32>
     620:	00 00       	nop
     622:	8d b7       	in	r24, 0x3d	; 61
     624:	9e b7       	in	r25, 0x3e	; 62
     626:	08 96       	adiw	r24, 0x08	; 8
     628:	0f b6       	in	r0, 0x3f	; 63
     62a:	f8 94       	cli
     62c:	9e bf       	out	0x3e, r25	; 62
     62e:	0f be       	out	0x3f, r0	; 63
     630:	8d bf       	out	0x3d, r24	; 61
     632:	08 95       	ret

00000634 <pwm_init>:


//pwm functions:

void pwm_init(void){
	i2c_init();
     634:	0e 94 20 03 	call	0x640	; 0x640 <i2c_init>
	PCA9685_init_pwm(PWM_FREQUENCY_50);
     638:	89 e7       	ldi	r24, 0x79	; 121
     63a:	0e 94 ce 02 	call	0x59c	; 0x59c <PCA9685_init_pwm>
     63e:	08 95       	ret

00000640 <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
     640:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     644:	8c e0       	ldi	r24, 0x0C	; 12
     646:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
     64a:	08 95       	ret

0000064c <i2c_start>:
     64c:	94 ea       	ldi	r25, 0xA4	; 164
     64e:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     652:	ec eb       	ldi	r30, 0xBC	; 188
     654:	f0 e0       	ldi	r31, 0x00	; 0
     656:	90 81       	ld	r25, Z
     658:	99 23       	and	r25, r25
     65a:	ec f7       	brge	.-6      	; 0x656 <i2c_start+0xa>
     65c:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     660:	98 7f       	andi	r25, 0xF8	; 248
     662:	98 30       	cpi	r25, 0x08	; 8
     664:	11 f0       	breq	.+4      	; 0x66a <i2c_start+0x1e>
     666:	90 31       	cpi	r25, 0x10	; 16
     668:	a1 f4       	brne	.+40     	; 0x692 <i2c_start+0x46>
     66a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
     66e:	84 e8       	ldi	r24, 0x84	; 132
     670:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     674:	ec eb       	ldi	r30, 0xBC	; 188
     676:	f0 e0       	ldi	r31, 0x00	; 0
     678:	80 81       	ld	r24, Z
     67a:	88 23       	and	r24, r24
     67c:	ec f7       	brge	.-6      	; 0x678 <i2c_start+0x2c>
     67e:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     682:	98 7f       	andi	r25, 0xF8	; 248
     684:	98 31       	cpi	r25, 0x18	; 24
     686:	39 f0       	breq	.+14     	; 0x696 <i2c_start+0x4a>
     688:	81 e0       	ldi	r24, 0x01	; 1
     68a:	90 34       	cpi	r25, 0x40	; 64
     68c:	29 f4       	brne	.+10     	; 0x698 <i2c_start+0x4c>
     68e:	80 e0       	ldi	r24, 0x00	; 0
     690:	08 95       	ret
     692:	81 e0       	ldi	r24, 0x01	; 1
     694:	08 95       	ret
     696:	80 e0       	ldi	r24, 0x00	; 0
     698:	08 95       	ret

0000069a <i2c_stop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     69a:	84 e9       	ldi	r24, 0x94	; 148
     69c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
     6a0:	ec eb       	ldi	r30, 0xBC	; 188
     6a2:	f0 e0       	ldi	r31, 0x00	; 0
     6a4:	80 81       	ld	r24, Z
     6a6:	84 fd       	sbrc	r24, 4
     6a8:	fd cf       	rjmp	.-6      	; 0x6a4 <i2c_stop+0xa>

}/* i2c_stop */
     6aa:	08 95       	ret

000006ac <i2c_write>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     6ac:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1<<TWINT) | (1<<TWEN);
     6b0:	84 e8       	ldi	r24, 0x84	; 132
     6b2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     6b6:	ec eb       	ldi	r30, 0xBC	; 188
     6b8:	f0 e0       	ldi	r31, 0x00	; 0
     6ba:	80 81       	ld	r24, Z
     6bc:	88 23       	and	r24, r24
     6be:	ec f7       	brge	.-6      	; 0x6ba <i2c_write+0xe>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     6c0:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     6c4:	98 7f       	andi	r25, 0xF8	; 248
     6c6:	81 e0       	ldi	r24, 0x01	; 1
     6c8:	98 32       	cpi	r25, 0x28	; 40
     6ca:	09 f4       	brne	.+2      	; 0x6ce <i2c_write+0x22>
     6cc:	80 e0       	ldi	r24, 0x00	; 0
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     6ce:	08 95       	ret

000006d0 <uart_putchar>:
		stdout = &uart_output;	//redirect standard output to uart
		stdin  = &uart_input;  //redirect standard input to uart
}
	

void uart_putchar(char c, FILE *stream) {
     6d0:	cf 93       	push	r28
     6d2:	c8 2f       	mov	r28, r24
	if (c == '\n') {
     6d4:	8a 30       	cpi	r24, 0x0A	; 10
     6d6:	19 f4       	brne	.+6      	; 0x6de <uart_putchar+0xe>
		uart_putchar('\r', stream);
     6d8:	8d e0       	ldi	r24, 0x0D	; 13
     6da:	0e 94 68 03 	call	0x6d0	; 0x6d0 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
     6de:	e0 ec       	ldi	r30, 0xC0	; 192
     6e0:	f0 e0       	ldi	r31, 0x00	; 0
     6e2:	80 81       	ld	r24, Z
     6e4:	85 ff       	sbrs	r24, 5
     6e6:	fd cf       	rjmp	.-6      	; 0x6e2 <uart_putchar+0x12>
	UDR0 = c;
     6e8:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
}
     6ec:	cf 91       	pop	r28
     6ee:	08 95       	ret

000006f0 <uart_getchar>:

char uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
     6f0:	e0 ec       	ldi	r30, 0xC0	; 192
     6f2:	f0 e0       	ldi	r31, 0x00	; 0
     6f4:	80 81       	ld	r24, Z
     6f6:	88 23       	and	r24, r24
     6f8:	ec f7       	brge	.-6      	; 0x6f4 <uart_getchar+0x4>
	return UDR0;
     6fa:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     6fe:	08 95       	ret

00000700 <uart_init>:
FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);


void uart_init(void) {
	
	UBRR0H = UBRRH_VALUE;
     700:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L = UBRRL_VALUE;
     704:	87 e6       	ldi	r24, 0x67	; 103
     706:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	
	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
     70a:	e0 ec       	ldi	r30, 0xC0	; 192
     70c:	f0 e0       	ldi	r31, 0x00	; 0
     70e:	80 81       	ld	r24, Z
     710:	8d 7f       	andi	r24, 0xFD	; 253
     712:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
     714:	86 e0       	ldi	r24, 0x06	; 6
     716:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
     71a:	88 e1       	ldi	r24, 0x18	; 24
     71c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     720:	08 95       	ret

00000722 <io_redirect>:
}

void io_redirect(void ){
		
		
		stdout = &uart_output;	//redirect standard output to uart
     722:	ea ee       	ldi	r30, 0xEA	; 234
     724:	f1 e0       	ldi	r31, 0x01	; 1
     726:	8e e0       	ldi	r24, 0x0E	; 14
     728:	91 e0       	ldi	r25, 0x01	; 1
     72a:	93 83       	std	Z+3, r25	; 0x03
     72c:	82 83       	std	Z+2, r24	; 0x02
		stdin  = &uart_input;  //redirect standard input to uart
     72e:	80 e0       	ldi	r24, 0x00	; 0
     730:	91 e0       	ldi	r25, 0x01	; 1
     732:	91 83       	std	Z+1, r25	; 0x01
     734:	80 83       	st	Z, r24
     736:	08 95       	ret

00000738 <vfprintf>:
     738:	a0 e1       	ldi	r26, 0x10	; 16
     73a:	b0 e0       	ldi	r27, 0x00	; 0
     73c:	e2 ea       	ldi	r30, 0xA2	; 162
     73e:	f3 e0       	ldi	r31, 0x03	; 3
     740:	0c 94 19 07 	jmp	0xe32	; 0xe32 <__prologue_saves__>
     744:	7c 01       	movw	r14, r24
     746:	1b 01       	movw	r2, r22
     748:	6a 01       	movw	r12, r20
     74a:	fc 01       	movw	r30, r24
     74c:	17 82       	std	Z+7, r1	; 0x07
     74e:	16 82       	std	Z+6, r1	; 0x06
     750:	83 81       	ldd	r24, Z+3	; 0x03
     752:	81 ff       	sbrs	r24, 1
     754:	44 c3       	rjmp	.+1672   	; 0xdde <__stack+0x4df>
     756:	9e 01       	movw	r18, r28
     758:	2f 5f       	subi	r18, 0xFF	; 255
     75a:	3f 4f       	sbci	r19, 0xFF	; 255
     75c:	39 01       	movw	r6, r18
     75e:	f7 01       	movw	r30, r14
     760:	93 81       	ldd	r25, Z+3	; 0x03
     762:	f1 01       	movw	r30, r2
     764:	93 fd       	sbrc	r25, 3
     766:	85 91       	lpm	r24, Z+
     768:	93 ff       	sbrs	r25, 3
     76a:	81 91       	ld	r24, Z+
     76c:	1f 01       	movw	r2, r30
     76e:	88 23       	and	r24, r24
     770:	09 f4       	brne	.+2      	; 0x774 <vfprintf+0x3c>
     772:	31 c3       	rjmp	.+1634   	; 0xdd6 <__stack+0x4d7>
     774:	85 32       	cpi	r24, 0x25	; 37
     776:	39 f4       	brne	.+14     	; 0x786 <vfprintf+0x4e>
     778:	93 fd       	sbrc	r25, 3
     77a:	85 91       	lpm	r24, Z+
     77c:	93 ff       	sbrs	r25, 3
     77e:	81 91       	ld	r24, Z+
     780:	1f 01       	movw	r2, r30
     782:	85 32       	cpi	r24, 0x25	; 37
     784:	39 f4       	brne	.+14     	; 0x794 <vfprintf+0x5c>
     786:	b7 01       	movw	r22, r14
     788:	90 e0       	ldi	r25, 0x00	; 0
     78a:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     78e:	56 01       	movw	r10, r12
     790:	65 01       	movw	r12, r10
     792:	e5 cf       	rjmp	.-54     	; 0x75e <vfprintf+0x26>
     794:	10 e0       	ldi	r17, 0x00	; 0
     796:	51 2c       	mov	r5, r1
     798:	91 2c       	mov	r9, r1
     79a:	ff e1       	ldi	r31, 0x1F	; 31
     79c:	f9 15       	cp	r31, r9
     79e:	d8 f0       	brcs	.+54     	; 0x7d6 <vfprintf+0x9e>
     7a0:	8b 32       	cpi	r24, 0x2B	; 43
     7a2:	79 f0       	breq	.+30     	; 0x7c2 <vfprintf+0x8a>
     7a4:	38 f4       	brcc	.+14     	; 0x7b4 <vfprintf+0x7c>
     7a6:	80 32       	cpi	r24, 0x20	; 32
     7a8:	79 f0       	breq	.+30     	; 0x7c8 <vfprintf+0x90>
     7aa:	83 32       	cpi	r24, 0x23	; 35
     7ac:	a1 f4       	brne	.+40     	; 0x7d6 <vfprintf+0x9e>
     7ae:	f9 2d       	mov	r31, r9
     7b0:	f0 61       	ori	r31, 0x10	; 16
     7b2:	2e c0       	rjmp	.+92     	; 0x810 <vfprintf+0xd8>
     7b4:	8d 32       	cpi	r24, 0x2D	; 45
     7b6:	61 f0       	breq	.+24     	; 0x7d0 <vfprintf+0x98>
     7b8:	80 33       	cpi	r24, 0x30	; 48
     7ba:	69 f4       	brne	.+26     	; 0x7d6 <vfprintf+0x9e>
     7bc:	29 2d       	mov	r18, r9
     7be:	21 60       	ori	r18, 0x01	; 1
     7c0:	2d c0       	rjmp	.+90     	; 0x81c <vfprintf+0xe4>
     7c2:	39 2d       	mov	r19, r9
     7c4:	32 60       	ori	r19, 0x02	; 2
     7c6:	93 2e       	mov	r9, r19
     7c8:	89 2d       	mov	r24, r9
     7ca:	84 60       	ori	r24, 0x04	; 4
     7cc:	98 2e       	mov	r9, r24
     7ce:	2a c0       	rjmp	.+84     	; 0x824 <vfprintf+0xec>
     7d0:	e9 2d       	mov	r30, r9
     7d2:	e8 60       	ori	r30, 0x08	; 8
     7d4:	15 c0       	rjmp	.+42     	; 0x800 <vfprintf+0xc8>
     7d6:	97 fc       	sbrc	r9, 7
     7d8:	2d c0       	rjmp	.+90     	; 0x834 <vfprintf+0xfc>
     7da:	20 ed       	ldi	r18, 0xD0	; 208
     7dc:	28 0f       	add	r18, r24
     7de:	2a 30       	cpi	r18, 0x0A	; 10
     7e0:	88 f4       	brcc	.+34     	; 0x804 <vfprintf+0xcc>
     7e2:	96 fe       	sbrs	r9, 6
     7e4:	06 c0       	rjmp	.+12     	; 0x7f2 <vfprintf+0xba>
     7e6:	3a e0       	ldi	r19, 0x0A	; 10
     7e8:	13 9f       	mul	r17, r19
     7ea:	20 0d       	add	r18, r0
     7ec:	11 24       	eor	r1, r1
     7ee:	12 2f       	mov	r17, r18
     7f0:	19 c0       	rjmp	.+50     	; 0x824 <vfprintf+0xec>
     7f2:	8a e0       	ldi	r24, 0x0A	; 10
     7f4:	58 9e       	mul	r5, r24
     7f6:	20 0d       	add	r18, r0
     7f8:	11 24       	eor	r1, r1
     7fa:	52 2e       	mov	r5, r18
     7fc:	e9 2d       	mov	r30, r9
     7fe:	e0 62       	ori	r30, 0x20	; 32
     800:	9e 2e       	mov	r9, r30
     802:	10 c0       	rjmp	.+32     	; 0x824 <vfprintf+0xec>
     804:	8e 32       	cpi	r24, 0x2E	; 46
     806:	31 f4       	brne	.+12     	; 0x814 <vfprintf+0xdc>
     808:	96 fc       	sbrc	r9, 6
     80a:	e5 c2       	rjmp	.+1482   	; 0xdd6 <__stack+0x4d7>
     80c:	f9 2d       	mov	r31, r9
     80e:	f0 64       	ori	r31, 0x40	; 64
     810:	9f 2e       	mov	r9, r31
     812:	08 c0       	rjmp	.+16     	; 0x824 <vfprintf+0xec>
     814:	8c 36       	cpi	r24, 0x6C	; 108
     816:	21 f4       	brne	.+8      	; 0x820 <vfprintf+0xe8>
     818:	29 2d       	mov	r18, r9
     81a:	20 68       	ori	r18, 0x80	; 128
     81c:	92 2e       	mov	r9, r18
     81e:	02 c0       	rjmp	.+4      	; 0x824 <vfprintf+0xec>
     820:	88 36       	cpi	r24, 0x68	; 104
     822:	41 f4       	brne	.+16     	; 0x834 <vfprintf+0xfc>
     824:	f1 01       	movw	r30, r2
     826:	93 fd       	sbrc	r25, 3
     828:	85 91       	lpm	r24, Z+
     82a:	93 ff       	sbrs	r25, 3
     82c:	81 91       	ld	r24, Z+
     82e:	1f 01       	movw	r2, r30
     830:	81 11       	cpse	r24, r1
     832:	b3 cf       	rjmp	.-154    	; 0x79a <vfprintf+0x62>
     834:	9b eb       	ldi	r25, 0xBB	; 187
     836:	98 0f       	add	r25, r24
     838:	93 30       	cpi	r25, 0x03	; 3
     83a:	20 f4       	brcc	.+8      	; 0x844 <vfprintf+0x10c>
     83c:	99 2d       	mov	r25, r9
     83e:	90 61       	ori	r25, 0x10	; 16
     840:	80 5e       	subi	r24, 0xE0	; 224
     842:	07 c0       	rjmp	.+14     	; 0x852 <vfprintf+0x11a>
     844:	9b e9       	ldi	r25, 0x9B	; 155
     846:	98 0f       	add	r25, r24
     848:	93 30       	cpi	r25, 0x03	; 3
     84a:	08 f0       	brcs	.+2      	; 0x84e <vfprintf+0x116>
     84c:	66 c1       	rjmp	.+716    	; 0xb1a <__stack+0x21b>
     84e:	99 2d       	mov	r25, r9
     850:	9f 7e       	andi	r25, 0xEF	; 239
     852:	96 ff       	sbrs	r25, 6
     854:	16 e0       	ldi	r17, 0x06	; 6
     856:	9f 73       	andi	r25, 0x3F	; 63
     858:	99 2e       	mov	r9, r25
     85a:	85 36       	cpi	r24, 0x65	; 101
     85c:	19 f4       	brne	.+6      	; 0x864 <vfprintf+0x12c>
     85e:	90 64       	ori	r25, 0x40	; 64
     860:	99 2e       	mov	r9, r25
     862:	08 c0       	rjmp	.+16     	; 0x874 <vfprintf+0x13c>
     864:	86 36       	cpi	r24, 0x66	; 102
     866:	21 f4       	brne	.+8      	; 0x870 <vfprintf+0x138>
     868:	39 2f       	mov	r19, r25
     86a:	30 68       	ori	r19, 0x80	; 128
     86c:	93 2e       	mov	r9, r19
     86e:	02 c0       	rjmp	.+4      	; 0x874 <vfprintf+0x13c>
     870:	11 11       	cpse	r17, r1
     872:	11 50       	subi	r17, 0x01	; 1
     874:	97 fe       	sbrs	r9, 7
     876:	07 c0       	rjmp	.+14     	; 0x886 <vfprintf+0x14e>
     878:	1c 33       	cpi	r17, 0x3C	; 60
     87a:	50 f4       	brcc	.+20     	; 0x890 <vfprintf+0x158>
     87c:	44 24       	eor	r4, r4
     87e:	43 94       	inc	r4
     880:	41 0e       	add	r4, r17
     882:	27 e0       	ldi	r18, 0x07	; 7
     884:	0b c0       	rjmp	.+22     	; 0x89c <vfprintf+0x164>
     886:	18 30       	cpi	r17, 0x08	; 8
     888:	38 f0       	brcs	.+14     	; 0x898 <vfprintf+0x160>
     88a:	27 e0       	ldi	r18, 0x07	; 7
     88c:	17 e0       	ldi	r17, 0x07	; 7
     88e:	05 c0       	rjmp	.+10     	; 0x89a <vfprintf+0x162>
     890:	27 e0       	ldi	r18, 0x07	; 7
     892:	9c e3       	ldi	r25, 0x3C	; 60
     894:	49 2e       	mov	r4, r25
     896:	02 c0       	rjmp	.+4      	; 0x89c <vfprintf+0x164>
     898:	21 2f       	mov	r18, r17
     89a:	41 2c       	mov	r4, r1
     89c:	56 01       	movw	r10, r12
     89e:	84 e0       	ldi	r24, 0x04	; 4
     8a0:	a8 0e       	add	r10, r24
     8a2:	b1 1c       	adc	r11, r1
     8a4:	f6 01       	movw	r30, r12
     8a6:	60 81       	ld	r22, Z
     8a8:	71 81       	ldd	r23, Z+1	; 0x01
     8aa:	82 81       	ldd	r24, Z+2	; 0x02
     8ac:	93 81       	ldd	r25, Z+3	; 0x03
     8ae:	04 2d       	mov	r16, r4
     8b0:	a3 01       	movw	r20, r6
     8b2:	0e 94 50 07 	call	0xea0	; 0xea0 <__ftoa_engine>
     8b6:	6c 01       	movw	r12, r24
     8b8:	f9 81       	ldd	r31, Y+1	; 0x01
     8ba:	fc 87       	std	Y+12, r31	; 0x0c
     8bc:	f0 ff       	sbrs	r31, 0
     8be:	02 c0       	rjmp	.+4      	; 0x8c4 <vfprintf+0x18c>
     8c0:	f3 ff       	sbrs	r31, 3
     8c2:	06 c0       	rjmp	.+12     	; 0x8d0 <vfprintf+0x198>
     8c4:	91 fc       	sbrc	r9, 1
     8c6:	06 c0       	rjmp	.+12     	; 0x8d4 <vfprintf+0x19c>
     8c8:	92 fe       	sbrs	r9, 2
     8ca:	06 c0       	rjmp	.+12     	; 0x8d8 <vfprintf+0x1a0>
     8cc:	00 e2       	ldi	r16, 0x20	; 32
     8ce:	05 c0       	rjmp	.+10     	; 0x8da <vfprintf+0x1a2>
     8d0:	0d e2       	ldi	r16, 0x2D	; 45
     8d2:	03 c0       	rjmp	.+6      	; 0x8da <vfprintf+0x1a2>
     8d4:	0b e2       	ldi	r16, 0x2B	; 43
     8d6:	01 c0       	rjmp	.+2      	; 0x8da <vfprintf+0x1a2>
     8d8:	00 e0       	ldi	r16, 0x00	; 0
     8da:	8c 85       	ldd	r24, Y+12	; 0x0c
     8dc:	8c 70       	andi	r24, 0x0C	; 12
     8de:	19 f0       	breq	.+6      	; 0x8e6 <vfprintf+0x1ae>
     8e0:	01 11       	cpse	r16, r1
     8e2:	5a c2       	rjmp	.+1204   	; 0xd98 <__stack+0x499>
     8e4:	9b c2       	rjmp	.+1334   	; 0xe1c <__stack+0x51d>
     8e6:	97 fe       	sbrs	r9, 7
     8e8:	10 c0       	rjmp	.+32     	; 0x90a <__stack+0xb>
     8ea:	4c 0c       	add	r4, r12
     8ec:	fc 85       	ldd	r31, Y+12	; 0x0c
     8ee:	f4 ff       	sbrs	r31, 4
     8f0:	04 c0       	rjmp	.+8      	; 0x8fa <vfprintf+0x1c2>
     8f2:	8a 81       	ldd	r24, Y+2	; 0x02
     8f4:	81 33       	cpi	r24, 0x31	; 49
     8f6:	09 f4       	brne	.+2      	; 0x8fa <vfprintf+0x1c2>
     8f8:	4a 94       	dec	r4
     8fa:	14 14       	cp	r1, r4
     8fc:	74 f5       	brge	.+92     	; 0x95a <__stack+0x5b>
     8fe:	28 e0       	ldi	r18, 0x08	; 8
     900:	24 15       	cp	r18, r4
     902:	78 f5       	brcc	.+94     	; 0x962 <__stack+0x63>
     904:	88 e0       	ldi	r24, 0x08	; 8
     906:	48 2e       	mov	r4, r24
     908:	2c c0       	rjmp	.+88     	; 0x962 <__stack+0x63>
     90a:	96 fc       	sbrc	r9, 6
     90c:	2a c0       	rjmp	.+84     	; 0x962 <__stack+0x63>
     90e:	81 2f       	mov	r24, r17
     910:	90 e0       	ldi	r25, 0x00	; 0
     912:	8c 15       	cp	r24, r12
     914:	9d 05       	cpc	r25, r13
     916:	9c f0       	brlt	.+38     	; 0x93e <__stack+0x3f>
     918:	3c ef       	ldi	r19, 0xFC	; 252
     91a:	c3 16       	cp	r12, r19
     91c:	3f ef       	ldi	r19, 0xFF	; 255
     91e:	d3 06       	cpc	r13, r19
     920:	74 f0       	brlt	.+28     	; 0x93e <__stack+0x3f>
     922:	89 2d       	mov	r24, r9
     924:	80 68       	ori	r24, 0x80	; 128
     926:	98 2e       	mov	r9, r24
     928:	0a c0       	rjmp	.+20     	; 0x93e <__stack+0x3f>
     92a:	e2 e0       	ldi	r30, 0x02	; 2
     92c:	f0 e0       	ldi	r31, 0x00	; 0
     92e:	ec 0f       	add	r30, r28
     930:	fd 1f       	adc	r31, r29
     932:	e1 0f       	add	r30, r17
     934:	f1 1d       	adc	r31, r1
     936:	80 81       	ld	r24, Z
     938:	80 33       	cpi	r24, 0x30	; 48
     93a:	19 f4       	brne	.+6      	; 0x942 <__stack+0x43>
     93c:	11 50       	subi	r17, 0x01	; 1
     93e:	11 11       	cpse	r17, r1
     940:	f4 cf       	rjmp	.-24     	; 0x92a <__stack+0x2b>
     942:	97 fe       	sbrs	r9, 7
     944:	0e c0       	rjmp	.+28     	; 0x962 <__stack+0x63>
     946:	44 24       	eor	r4, r4
     948:	43 94       	inc	r4
     94a:	41 0e       	add	r4, r17
     94c:	81 2f       	mov	r24, r17
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	c8 16       	cp	r12, r24
     952:	d9 06       	cpc	r13, r25
     954:	2c f4       	brge	.+10     	; 0x960 <__stack+0x61>
     956:	1c 19       	sub	r17, r12
     958:	04 c0       	rjmp	.+8      	; 0x962 <__stack+0x63>
     95a:	44 24       	eor	r4, r4
     95c:	43 94       	inc	r4
     95e:	01 c0       	rjmp	.+2      	; 0x962 <__stack+0x63>
     960:	10 e0       	ldi	r17, 0x00	; 0
     962:	97 fe       	sbrs	r9, 7
     964:	06 c0       	rjmp	.+12     	; 0x972 <__stack+0x73>
     966:	1c 14       	cp	r1, r12
     968:	1d 04       	cpc	r1, r13
     96a:	34 f4       	brge	.+12     	; 0x978 <__stack+0x79>
     96c:	c6 01       	movw	r24, r12
     96e:	01 96       	adiw	r24, 0x01	; 1
     970:	05 c0       	rjmp	.+10     	; 0x97c <__stack+0x7d>
     972:	85 e0       	ldi	r24, 0x05	; 5
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	02 c0       	rjmp	.+4      	; 0x97c <__stack+0x7d>
     978:	81 e0       	ldi	r24, 0x01	; 1
     97a:	90 e0       	ldi	r25, 0x00	; 0
     97c:	01 11       	cpse	r16, r1
     97e:	01 96       	adiw	r24, 0x01	; 1
     980:	11 23       	and	r17, r17
     982:	31 f0       	breq	.+12     	; 0x990 <__stack+0x91>
     984:	21 2f       	mov	r18, r17
     986:	30 e0       	ldi	r19, 0x00	; 0
     988:	2f 5f       	subi	r18, 0xFF	; 255
     98a:	3f 4f       	sbci	r19, 0xFF	; 255
     98c:	82 0f       	add	r24, r18
     98e:	93 1f       	adc	r25, r19
     990:	25 2d       	mov	r18, r5
     992:	30 e0       	ldi	r19, 0x00	; 0
     994:	82 17       	cp	r24, r18
     996:	93 07       	cpc	r25, r19
     998:	14 f4       	brge	.+4      	; 0x99e <__stack+0x9f>
     99a:	58 1a       	sub	r5, r24
     99c:	01 c0       	rjmp	.+2      	; 0x9a0 <__stack+0xa1>
     99e:	51 2c       	mov	r5, r1
     9a0:	89 2d       	mov	r24, r9
     9a2:	89 70       	andi	r24, 0x09	; 9
     9a4:	49 f4       	brne	.+18     	; 0x9b8 <__stack+0xb9>
     9a6:	55 20       	and	r5, r5
     9a8:	39 f0       	breq	.+14     	; 0x9b8 <__stack+0xb9>
     9aa:	b7 01       	movw	r22, r14
     9ac:	80 e2       	ldi	r24, 0x20	; 32
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     9b4:	5a 94       	dec	r5
     9b6:	f7 cf       	rjmp	.-18     	; 0x9a6 <__stack+0xa7>
     9b8:	00 23       	and	r16, r16
     9ba:	29 f0       	breq	.+10     	; 0x9c6 <__stack+0xc7>
     9bc:	b7 01       	movw	r22, r14
     9be:	80 2f       	mov	r24, r16
     9c0:	90 e0       	ldi	r25, 0x00	; 0
     9c2:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     9c6:	93 fc       	sbrc	r9, 3
     9c8:	09 c0       	rjmp	.+18     	; 0x9dc <__stack+0xdd>
     9ca:	55 20       	and	r5, r5
     9cc:	39 f0       	breq	.+14     	; 0x9dc <__stack+0xdd>
     9ce:	b7 01       	movw	r22, r14
     9d0:	80 e3       	ldi	r24, 0x30	; 48
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     9d8:	5a 94       	dec	r5
     9da:	f7 cf       	rjmp	.-18     	; 0x9ca <__stack+0xcb>
     9dc:	97 fe       	sbrs	r9, 7
     9de:	4c c0       	rjmp	.+152    	; 0xa78 <__stack+0x179>
     9e0:	46 01       	movw	r8, r12
     9e2:	d7 fe       	sbrs	r13, 7
     9e4:	02 c0       	rjmp	.+4      	; 0x9ea <__stack+0xeb>
     9e6:	81 2c       	mov	r8, r1
     9e8:	91 2c       	mov	r9, r1
     9ea:	c6 01       	movw	r24, r12
     9ec:	88 19       	sub	r24, r8
     9ee:	99 09       	sbc	r25, r9
     9f0:	f3 01       	movw	r30, r6
     9f2:	e8 0f       	add	r30, r24
     9f4:	f9 1f       	adc	r31, r25
     9f6:	fe 87       	std	Y+14, r31	; 0x0e
     9f8:	ed 87       	std	Y+13, r30	; 0x0d
     9fa:	96 01       	movw	r18, r12
     9fc:	24 19       	sub	r18, r4
     9fe:	31 09       	sbc	r19, r1
     a00:	38 8b       	std	Y+16, r19	; 0x10
     a02:	2f 87       	std	Y+15, r18	; 0x0f
     a04:	01 2f       	mov	r16, r17
     a06:	10 e0       	ldi	r17, 0x00	; 0
     a08:	11 95       	neg	r17
     a0a:	01 95       	neg	r16
     a0c:	11 09       	sbc	r17, r1
     a0e:	3f ef       	ldi	r19, 0xFF	; 255
     a10:	83 16       	cp	r8, r19
     a12:	93 06       	cpc	r9, r19
     a14:	29 f4       	brne	.+10     	; 0xa20 <__stack+0x121>
     a16:	b7 01       	movw	r22, r14
     a18:	8e e2       	ldi	r24, 0x2E	; 46
     a1a:	90 e0       	ldi	r25, 0x00	; 0
     a1c:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     a20:	c8 14       	cp	r12, r8
     a22:	d9 04       	cpc	r13, r9
     a24:	4c f0       	brlt	.+18     	; 0xa38 <__stack+0x139>
     a26:	8f 85       	ldd	r24, Y+15	; 0x0f
     a28:	98 89       	ldd	r25, Y+16	; 0x10
     a2a:	88 15       	cp	r24, r8
     a2c:	99 05       	cpc	r25, r9
     a2e:	24 f4       	brge	.+8      	; 0xa38 <__stack+0x139>
     a30:	ed 85       	ldd	r30, Y+13	; 0x0d
     a32:	fe 85       	ldd	r31, Y+14	; 0x0e
     a34:	81 81       	ldd	r24, Z+1	; 0x01
     a36:	01 c0       	rjmp	.+2      	; 0xa3a <__stack+0x13b>
     a38:	80 e3       	ldi	r24, 0x30	; 48
     a3a:	f1 e0       	ldi	r31, 0x01	; 1
     a3c:	8f 1a       	sub	r8, r31
     a3e:	91 08       	sbc	r9, r1
     a40:	2d 85       	ldd	r18, Y+13	; 0x0d
     a42:	3e 85       	ldd	r19, Y+14	; 0x0e
     a44:	2f 5f       	subi	r18, 0xFF	; 255
     a46:	3f 4f       	sbci	r19, 0xFF	; 255
     a48:	3e 87       	std	Y+14, r19	; 0x0e
     a4a:	2d 87       	std	Y+13, r18	; 0x0d
     a4c:	80 16       	cp	r8, r16
     a4e:	91 06       	cpc	r9, r17
     a50:	2c f0       	brlt	.+10     	; 0xa5c <__stack+0x15d>
     a52:	b7 01       	movw	r22, r14
     a54:	90 e0       	ldi	r25, 0x00	; 0
     a56:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     a5a:	d9 cf       	rjmp	.-78     	; 0xa0e <__stack+0x10f>
     a5c:	c8 14       	cp	r12, r8
     a5e:	d9 04       	cpc	r13, r9
     a60:	41 f4       	brne	.+16     	; 0xa72 <__stack+0x173>
     a62:	9a 81       	ldd	r25, Y+2	; 0x02
     a64:	96 33       	cpi	r25, 0x36	; 54
     a66:	20 f4       	brcc	.+8      	; 0xa70 <__stack+0x171>
     a68:	95 33       	cpi	r25, 0x35	; 53
     a6a:	19 f4       	brne	.+6      	; 0xa72 <__stack+0x173>
     a6c:	3c 85       	ldd	r19, Y+12	; 0x0c
     a6e:	34 ff       	sbrs	r19, 4
     a70:	81 e3       	ldi	r24, 0x31	; 49
     a72:	b7 01       	movw	r22, r14
     a74:	90 e0       	ldi	r25, 0x00	; 0
     a76:	4e c0       	rjmp	.+156    	; 0xb14 <__stack+0x215>
     a78:	8a 81       	ldd	r24, Y+2	; 0x02
     a7a:	81 33       	cpi	r24, 0x31	; 49
     a7c:	19 f0       	breq	.+6      	; 0xa84 <__stack+0x185>
     a7e:	9c 85       	ldd	r25, Y+12	; 0x0c
     a80:	9f 7e       	andi	r25, 0xEF	; 239
     a82:	9c 87       	std	Y+12, r25	; 0x0c
     a84:	b7 01       	movw	r22, r14
     a86:	90 e0       	ldi	r25, 0x00	; 0
     a88:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     a8c:	11 11       	cpse	r17, r1
     a8e:	05 c0       	rjmp	.+10     	; 0xa9a <__stack+0x19b>
     a90:	94 fc       	sbrc	r9, 4
     a92:	18 c0       	rjmp	.+48     	; 0xac4 <__stack+0x1c5>
     a94:	85 e6       	ldi	r24, 0x65	; 101
     a96:	90 e0       	ldi	r25, 0x00	; 0
     a98:	17 c0       	rjmp	.+46     	; 0xac8 <__stack+0x1c9>
     a9a:	b7 01       	movw	r22, r14
     a9c:	8e e2       	ldi	r24, 0x2E	; 46
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     aa4:	1e 5f       	subi	r17, 0xFE	; 254
     aa6:	82 e0       	ldi	r24, 0x02	; 2
     aa8:	01 e0       	ldi	r16, 0x01	; 1
     aaa:	08 0f       	add	r16, r24
     aac:	f3 01       	movw	r30, r6
     aae:	e8 0f       	add	r30, r24
     ab0:	f1 1d       	adc	r31, r1
     ab2:	80 81       	ld	r24, Z
     ab4:	b7 01       	movw	r22, r14
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     abc:	80 2f       	mov	r24, r16
     abe:	01 13       	cpse	r16, r17
     ac0:	f3 cf       	rjmp	.-26     	; 0xaa8 <__stack+0x1a9>
     ac2:	e6 cf       	rjmp	.-52     	; 0xa90 <__stack+0x191>
     ac4:	85 e4       	ldi	r24, 0x45	; 69
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	b7 01       	movw	r22, r14
     aca:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     ace:	d7 fc       	sbrc	r13, 7
     ad0:	06 c0       	rjmp	.+12     	; 0xade <__stack+0x1df>
     ad2:	c1 14       	cp	r12, r1
     ad4:	d1 04       	cpc	r13, r1
     ad6:	41 f4       	brne	.+16     	; 0xae8 <__stack+0x1e9>
     ad8:	ec 85       	ldd	r30, Y+12	; 0x0c
     ada:	e4 ff       	sbrs	r30, 4
     adc:	05 c0       	rjmp	.+10     	; 0xae8 <__stack+0x1e9>
     ade:	d1 94       	neg	r13
     ae0:	c1 94       	neg	r12
     ae2:	d1 08       	sbc	r13, r1
     ae4:	8d e2       	ldi	r24, 0x2D	; 45
     ae6:	01 c0       	rjmp	.+2      	; 0xaea <__stack+0x1eb>
     ae8:	8b e2       	ldi	r24, 0x2B	; 43
     aea:	b7 01       	movw	r22, r14
     aec:	90 e0       	ldi	r25, 0x00	; 0
     aee:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     af2:	80 e3       	ldi	r24, 0x30	; 48
     af4:	2a e0       	ldi	r18, 0x0A	; 10
     af6:	c2 16       	cp	r12, r18
     af8:	d1 04       	cpc	r13, r1
     afa:	2c f0       	brlt	.+10     	; 0xb06 <__stack+0x207>
     afc:	8f 5f       	subi	r24, 0xFF	; 255
     afe:	fa e0       	ldi	r31, 0x0A	; 10
     b00:	cf 1a       	sub	r12, r31
     b02:	d1 08       	sbc	r13, r1
     b04:	f7 cf       	rjmp	.-18     	; 0xaf4 <__stack+0x1f5>
     b06:	b7 01       	movw	r22, r14
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     b0e:	b7 01       	movw	r22, r14
     b10:	c6 01       	movw	r24, r12
     b12:	c0 96       	adiw	r24, 0x30	; 48
     b14:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     b18:	54 c1       	rjmp	.+680    	; 0xdc2 <__stack+0x4c3>
     b1a:	83 36       	cpi	r24, 0x63	; 99
     b1c:	31 f0       	breq	.+12     	; 0xb2a <__stack+0x22b>
     b1e:	83 37       	cpi	r24, 0x73	; 115
     b20:	79 f0       	breq	.+30     	; 0xb40 <__stack+0x241>
     b22:	83 35       	cpi	r24, 0x53	; 83
     b24:	09 f0       	breq	.+2      	; 0xb28 <__stack+0x229>
     b26:	56 c0       	rjmp	.+172    	; 0xbd4 <__stack+0x2d5>
     b28:	20 c0       	rjmp	.+64     	; 0xb6a <__stack+0x26b>
     b2a:	56 01       	movw	r10, r12
     b2c:	32 e0       	ldi	r19, 0x02	; 2
     b2e:	a3 0e       	add	r10, r19
     b30:	b1 1c       	adc	r11, r1
     b32:	f6 01       	movw	r30, r12
     b34:	80 81       	ld	r24, Z
     b36:	89 83       	std	Y+1, r24	; 0x01
     b38:	01 e0       	ldi	r16, 0x01	; 1
     b3a:	10 e0       	ldi	r17, 0x00	; 0
     b3c:	63 01       	movw	r12, r6
     b3e:	12 c0       	rjmp	.+36     	; 0xb64 <__stack+0x265>
     b40:	56 01       	movw	r10, r12
     b42:	f2 e0       	ldi	r31, 0x02	; 2
     b44:	af 0e       	add	r10, r31
     b46:	b1 1c       	adc	r11, r1
     b48:	f6 01       	movw	r30, r12
     b4a:	c0 80       	ld	r12, Z
     b4c:	d1 80       	ldd	r13, Z+1	; 0x01
     b4e:	96 fe       	sbrs	r9, 6
     b50:	03 c0       	rjmp	.+6      	; 0xb58 <__stack+0x259>
     b52:	61 2f       	mov	r22, r17
     b54:	70 e0       	ldi	r23, 0x00	; 0
     b56:	02 c0       	rjmp	.+4      	; 0xb5c <__stack+0x25d>
     b58:	6f ef       	ldi	r22, 0xFF	; 255
     b5a:	7f ef       	ldi	r23, 0xFF	; 255
     b5c:	c6 01       	movw	r24, r12
     b5e:	0e 94 33 08 	call	0x1066	; 0x1066 <strnlen>
     b62:	8c 01       	movw	r16, r24
     b64:	f9 2d       	mov	r31, r9
     b66:	ff 77       	andi	r31, 0x7F	; 127
     b68:	14 c0       	rjmp	.+40     	; 0xb92 <__stack+0x293>
     b6a:	56 01       	movw	r10, r12
     b6c:	22 e0       	ldi	r18, 0x02	; 2
     b6e:	a2 0e       	add	r10, r18
     b70:	b1 1c       	adc	r11, r1
     b72:	f6 01       	movw	r30, r12
     b74:	c0 80       	ld	r12, Z
     b76:	d1 80       	ldd	r13, Z+1	; 0x01
     b78:	96 fe       	sbrs	r9, 6
     b7a:	03 c0       	rjmp	.+6      	; 0xb82 <__stack+0x283>
     b7c:	61 2f       	mov	r22, r17
     b7e:	70 e0       	ldi	r23, 0x00	; 0
     b80:	02 c0       	rjmp	.+4      	; 0xb86 <__stack+0x287>
     b82:	6f ef       	ldi	r22, 0xFF	; 255
     b84:	7f ef       	ldi	r23, 0xFF	; 255
     b86:	c6 01       	movw	r24, r12
     b88:	0e 94 28 08 	call	0x1050	; 0x1050 <strnlen_P>
     b8c:	8c 01       	movw	r16, r24
     b8e:	f9 2d       	mov	r31, r9
     b90:	f0 68       	ori	r31, 0x80	; 128
     b92:	9f 2e       	mov	r9, r31
     b94:	f3 fd       	sbrc	r31, 3
     b96:	1a c0       	rjmp	.+52     	; 0xbcc <__stack+0x2cd>
     b98:	85 2d       	mov	r24, r5
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	08 17       	cp	r16, r24
     b9e:	19 07       	cpc	r17, r25
     ba0:	a8 f4       	brcc	.+42     	; 0xbcc <__stack+0x2cd>
     ba2:	b7 01       	movw	r22, r14
     ba4:	80 e2       	ldi	r24, 0x20	; 32
     ba6:	90 e0       	ldi	r25, 0x00	; 0
     ba8:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     bac:	5a 94       	dec	r5
     bae:	f4 cf       	rjmp	.-24     	; 0xb98 <__stack+0x299>
     bb0:	f6 01       	movw	r30, r12
     bb2:	97 fc       	sbrc	r9, 7
     bb4:	85 91       	lpm	r24, Z+
     bb6:	97 fe       	sbrs	r9, 7
     bb8:	81 91       	ld	r24, Z+
     bba:	6f 01       	movw	r12, r30
     bbc:	b7 01       	movw	r22, r14
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     bc4:	51 10       	cpse	r5, r1
     bc6:	5a 94       	dec	r5
     bc8:	01 50       	subi	r16, 0x01	; 1
     bca:	11 09       	sbc	r17, r1
     bcc:	01 15       	cp	r16, r1
     bce:	11 05       	cpc	r17, r1
     bd0:	79 f7       	brne	.-34     	; 0xbb0 <__stack+0x2b1>
     bd2:	f7 c0       	rjmp	.+494    	; 0xdc2 <__stack+0x4c3>
     bd4:	84 36       	cpi	r24, 0x64	; 100
     bd6:	11 f0       	breq	.+4      	; 0xbdc <__stack+0x2dd>
     bd8:	89 36       	cpi	r24, 0x69	; 105
     bda:	61 f5       	brne	.+88     	; 0xc34 <__stack+0x335>
     bdc:	56 01       	movw	r10, r12
     bde:	97 fe       	sbrs	r9, 7
     be0:	09 c0       	rjmp	.+18     	; 0xbf4 <__stack+0x2f5>
     be2:	24 e0       	ldi	r18, 0x04	; 4
     be4:	a2 0e       	add	r10, r18
     be6:	b1 1c       	adc	r11, r1
     be8:	f6 01       	movw	r30, r12
     bea:	60 81       	ld	r22, Z
     bec:	71 81       	ldd	r23, Z+1	; 0x01
     bee:	82 81       	ldd	r24, Z+2	; 0x02
     bf0:	93 81       	ldd	r25, Z+3	; 0x03
     bf2:	0a c0       	rjmp	.+20     	; 0xc08 <__stack+0x309>
     bf4:	f2 e0       	ldi	r31, 0x02	; 2
     bf6:	af 0e       	add	r10, r31
     bf8:	b1 1c       	adc	r11, r1
     bfa:	f6 01       	movw	r30, r12
     bfc:	60 81       	ld	r22, Z
     bfe:	71 81       	ldd	r23, Z+1	; 0x01
     c00:	07 2e       	mov	r0, r23
     c02:	00 0c       	add	r0, r0
     c04:	88 0b       	sbc	r24, r24
     c06:	99 0b       	sbc	r25, r25
     c08:	f9 2d       	mov	r31, r9
     c0a:	ff 76       	andi	r31, 0x6F	; 111
     c0c:	9f 2e       	mov	r9, r31
     c0e:	97 ff       	sbrs	r25, 7
     c10:	09 c0       	rjmp	.+18     	; 0xc24 <__stack+0x325>
     c12:	90 95       	com	r25
     c14:	80 95       	com	r24
     c16:	70 95       	com	r23
     c18:	61 95       	neg	r22
     c1a:	7f 4f       	sbci	r23, 0xFF	; 255
     c1c:	8f 4f       	sbci	r24, 0xFF	; 255
     c1e:	9f 4f       	sbci	r25, 0xFF	; 255
     c20:	f0 68       	ori	r31, 0x80	; 128
     c22:	9f 2e       	mov	r9, r31
     c24:	2a e0       	ldi	r18, 0x0A	; 10
     c26:	30 e0       	ldi	r19, 0x00	; 0
     c28:	a3 01       	movw	r20, r6
     c2a:	0e 94 90 08 	call	0x1120	; 0x1120 <__ultoa_invert>
     c2e:	c8 2e       	mov	r12, r24
     c30:	c6 18       	sub	r12, r6
     c32:	3f c0       	rjmp	.+126    	; 0xcb2 <__stack+0x3b3>
     c34:	09 2d       	mov	r16, r9
     c36:	85 37       	cpi	r24, 0x75	; 117
     c38:	21 f4       	brne	.+8      	; 0xc42 <__stack+0x343>
     c3a:	0f 7e       	andi	r16, 0xEF	; 239
     c3c:	2a e0       	ldi	r18, 0x0A	; 10
     c3e:	30 e0       	ldi	r19, 0x00	; 0
     c40:	1d c0       	rjmp	.+58     	; 0xc7c <__stack+0x37d>
     c42:	09 7f       	andi	r16, 0xF9	; 249
     c44:	8f 36       	cpi	r24, 0x6F	; 111
     c46:	91 f0       	breq	.+36     	; 0xc6c <__stack+0x36d>
     c48:	18 f4       	brcc	.+6      	; 0xc50 <__stack+0x351>
     c4a:	88 35       	cpi	r24, 0x58	; 88
     c4c:	59 f0       	breq	.+22     	; 0xc64 <__stack+0x365>
     c4e:	c3 c0       	rjmp	.+390    	; 0xdd6 <__stack+0x4d7>
     c50:	80 37       	cpi	r24, 0x70	; 112
     c52:	19 f0       	breq	.+6      	; 0xc5a <__stack+0x35b>
     c54:	88 37       	cpi	r24, 0x78	; 120
     c56:	11 f0       	breq	.+4      	; 0xc5c <__stack+0x35d>
     c58:	be c0       	rjmp	.+380    	; 0xdd6 <__stack+0x4d7>
     c5a:	00 61       	ori	r16, 0x10	; 16
     c5c:	04 ff       	sbrs	r16, 4
     c5e:	09 c0       	rjmp	.+18     	; 0xc72 <__stack+0x373>
     c60:	04 60       	ori	r16, 0x04	; 4
     c62:	07 c0       	rjmp	.+14     	; 0xc72 <__stack+0x373>
     c64:	94 fe       	sbrs	r9, 4
     c66:	08 c0       	rjmp	.+16     	; 0xc78 <__stack+0x379>
     c68:	06 60       	ori	r16, 0x06	; 6
     c6a:	06 c0       	rjmp	.+12     	; 0xc78 <__stack+0x379>
     c6c:	28 e0       	ldi	r18, 0x08	; 8
     c6e:	30 e0       	ldi	r19, 0x00	; 0
     c70:	05 c0       	rjmp	.+10     	; 0xc7c <__stack+0x37d>
     c72:	20 e1       	ldi	r18, 0x10	; 16
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	02 c0       	rjmp	.+4      	; 0xc7c <__stack+0x37d>
     c78:	20 e1       	ldi	r18, 0x10	; 16
     c7a:	32 e0       	ldi	r19, 0x02	; 2
     c7c:	56 01       	movw	r10, r12
     c7e:	07 ff       	sbrs	r16, 7
     c80:	09 c0       	rjmp	.+18     	; 0xc94 <__stack+0x395>
     c82:	84 e0       	ldi	r24, 0x04	; 4
     c84:	a8 0e       	add	r10, r24
     c86:	b1 1c       	adc	r11, r1
     c88:	f6 01       	movw	r30, r12
     c8a:	60 81       	ld	r22, Z
     c8c:	71 81       	ldd	r23, Z+1	; 0x01
     c8e:	82 81       	ldd	r24, Z+2	; 0x02
     c90:	93 81       	ldd	r25, Z+3	; 0x03
     c92:	08 c0       	rjmp	.+16     	; 0xca4 <__stack+0x3a5>
     c94:	f2 e0       	ldi	r31, 0x02	; 2
     c96:	af 0e       	add	r10, r31
     c98:	b1 1c       	adc	r11, r1
     c9a:	f6 01       	movw	r30, r12
     c9c:	60 81       	ld	r22, Z
     c9e:	71 81       	ldd	r23, Z+1	; 0x01
     ca0:	80 e0       	ldi	r24, 0x00	; 0
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	a3 01       	movw	r20, r6
     ca6:	0e 94 90 08 	call	0x1120	; 0x1120 <__ultoa_invert>
     caa:	c8 2e       	mov	r12, r24
     cac:	c6 18       	sub	r12, r6
     cae:	0f 77       	andi	r16, 0x7F	; 127
     cb0:	90 2e       	mov	r9, r16
     cb2:	96 fe       	sbrs	r9, 6
     cb4:	0b c0       	rjmp	.+22     	; 0xccc <__stack+0x3cd>
     cb6:	09 2d       	mov	r16, r9
     cb8:	0e 7f       	andi	r16, 0xFE	; 254
     cba:	c1 16       	cp	r12, r17
     cbc:	50 f4       	brcc	.+20     	; 0xcd2 <__stack+0x3d3>
     cbe:	94 fe       	sbrs	r9, 4
     cc0:	0a c0       	rjmp	.+20     	; 0xcd6 <__stack+0x3d7>
     cc2:	92 fc       	sbrc	r9, 2
     cc4:	08 c0       	rjmp	.+16     	; 0xcd6 <__stack+0x3d7>
     cc6:	09 2d       	mov	r16, r9
     cc8:	0e 7e       	andi	r16, 0xEE	; 238
     cca:	05 c0       	rjmp	.+10     	; 0xcd6 <__stack+0x3d7>
     ccc:	dc 2c       	mov	r13, r12
     cce:	09 2d       	mov	r16, r9
     cd0:	03 c0       	rjmp	.+6      	; 0xcd8 <__stack+0x3d9>
     cd2:	dc 2c       	mov	r13, r12
     cd4:	01 c0       	rjmp	.+2      	; 0xcd8 <__stack+0x3d9>
     cd6:	d1 2e       	mov	r13, r17
     cd8:	04 ff       	sbrs	r16, 4
     cda:	0d c0       	rjmp	.+26     	; 0xcf6 <__stack+0x3f7>
     cdc:	fe 01       	movw	r30, r28
     cde:	ec 0d       	add	r30, r12
     ce0:	f1 1d       	adc	r31, r1
     ce2:	80 81       	ld	r24, Z
     ce4:	80 33       	cpi	r24, 0x30	; 48
     ce6:	11 f4       	brne	.+4      	; 0xcec <__stack+0x3ed>
     ce8:	09 7e       	andi	r16, 0xE9	; 233
     cea:	09 c0       	rjmp	.+18     	; 0xcfe <__stack+0x3ff>
     cec:	02 ff       	sbrs	r16, 2
     cee:	06 c0       	rjmp	.+12     	; 0xcfc <__stack+0x3fd>
     cf0:	d3 94       	inc	r13
     cf2:	d3 94       	inc	r13
     cf4:	04 c0       	rjmp	.+8      	; 0xcfe <__stack+0x3ff>
     cf6:	80 2f       	mov	r24, r16
     cf8:	86 78       	andi	r24, 0x86	; 134
     cfa:	09 f0       	breq	.+2      	; 0xcfe <__stack+0x3ff>
     cfc:	d3 94       	inc	r13
     cfe:	03 fd       	sbrc	r16, 3
     d00:	11 c0       	rjmp	.+34     	; 0xd24 <__stack+0x425>
     d02:	00 ff       	sbrs	r16, 0
     d04:	06 c0       	rjmp	.+12     	; 0xd12 <__stack+0x413>
     d06:	1c 2d       	mov	r17, r12
     d08:	d5 14       	cp	r13, r5
     d0a:	80 f4       	brcc	.+32     	; 0xd2c <__stack+0x42d>
     d0c:	15 0d       	add	r17, r5
     d0e:	1d 19       	sub	r17, r13
     d10:	0d c0       	rjmp	.+26     	; 0xd2c <__stack+0x42d>
     d12:	d5 14       	cp	r13, r5
     d14:	58 f4       	brcc	.+22     	; 0xd2c <__stack+0x42d>
     d16:	b7 01       	movw	r22, r14
     d18:	80 e2       	ldi	r24, 0x20	; 32
     d1a:	90 e0       	ldi	r25, 0x00	; 0
     d1c:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     d20:	d3 94       	inc	r13
     d22:	f7 cf       	rjmp	.-18     	; 0xd12 <__stack+0x413>
     d24:	d5 14       	cp	r13, r5
     d26:	10 f4       	brcc	.+4      	; 0xd2c <__stack+0x42d>
     d28:	5d 18       	sub	r5, r13
     d2a:	01 c0       	rjmp	.+2      	; 0xd2e <__stack+0x42f>
     d2c:	51 2c       	mov	r5, r1
     d2e:	04 ff       	sbrs	r16, 4
     d30:	10 c0       	rjmp	.+32     	; 0xd52 <__stack+0x453>
     d32:	b7 01       	movw	r22, r14
     d34:	80 e3       	ldi	r24, 0x30	; 48
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     d3c:	02 ff       	sbrs	r16, 2
     d3e:	17 c0       	rjmp	.+46     	; 0xd6e <__stack+0x46f>
     d40:	01 fd       	sbrc	r16, 1
     d42:	03 c0       	rjmp	.+6      	; 0xd4a <__stack+0x44b>
     d44:	88 e7       	ldi	r24, 0x78	; 120
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	02 c0       	rjmp	.+4      	; 0xd4e <__stack+0x44f>
     d4a:	88 e5       	ldi	r24, 0x58	; 88
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	b7 01       	movw	r22, r14
     d50:	0c c0       	rjmp	.+24     	; 0xd6a <__stack+0x46b>
     d52:	80 2f       	mov	r24, r16
     d54:	86 78       	andi	r24, 0x86	; 134
     d56:	59 f0       	breq	.+22     	; 0xd6e <__stack+0x46f>
     d58:	01 ff       	sbrs	r16, 1
     d5a:	02 c0       	rjmp	.+4      	; 0xd60 <__stack+0x461>
     d5c:	8b e2       	ldi	r24, 0x2B	; 43
     d5e:	01 c0       	rjmp	.+2      	; 0xd62 <__stack+0x463>
     d60:	80 e2       	ldi	r24, 0x20	; 32
     d62:	07 fd       	sbrc	r16, 7
     d64:	8d e2       	ldi	r24, 0x2D	; 45
     d66:	b7 01       	movw	r22, r14
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     d6e:	c1 16       	cp	r12, r17
     d70:	38 f4       	brcc	.+14     	; 0xd80 <__stack+0x481>
     d72:	b7 01       	movw	r22, r14
     d74:	80 e3       	ldi	r24, 0x30	; 48
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     d7c:	11 50       	subi	r17, 0x01	; 1
     d7e:	f7 cf       	rjmp	.-18     	; 0xd6e <__stack+0x46f>
     d80:	ca 94       	dec	r12
     d82:	f3 01       	movw	r30, r6
     d84:	ec 0d       	add	r30, r12
     d86:	f1 1d       	adc	r31, r1
     d88:	80 81       	ld	r24, Z
     d8a:	b7 01       	movw	r22, r14
     d8c:	90 e0       	ldi	r25, 0x00	; 0
     d8e:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     d92:	c1 10       	cpse	r12, r1
     d94:	f5 cf       	rjmp	.-22     	; 0xd80 <__stack+0x481>
     d96:	15 c0       	rjmp	.+42     	; 0xdc2 <__stack+0x4c3>
     d98:	f4 e0       	ldi	r31, 0x04	; 4
     d9a:	f5 15       	cp	r31, r5
     d9c:	60 f5       	brcc	.+88     	; 0xdf6 <__stack+0x4f7>
     d9e:	84 e0       	ldi	r24, 0x04	; 4
     da0:	58 1a       	sub	r5, r24
     da2:	93 fe       	sbrs	r9, 3
     da4:	1f c0       	rjmp	.+62     	; 0xde4 <__stack+0x4e5>
     da6:	01 11       	cpse	r16, r1
     da8:	27 c0       	rjmp	.+78     	; 0xdf8 <__stack+0x4f9>
     daa:	2c 85       	ldd	r18, Y+12	; 0x0c
     dac:	23 ff       	sbrs	r18, 3
     dae:	2a c0       	rjmp	.+84     	; 0xe04 <__stack+0x505>
     db0:	08 e6       	ldi	r16, 0x68	; 104
     db2:	10 e0       	ldi	r17, 0x00	; 0
     db4:	39 2d       	mov	r19, r9
     db6:	30 71       	andi	r19, 0x10	; 16
     db8:	93 2e       	mov	r9, r19
     dba:	f8 01       	movw	r30, r16
     dbc:	84 91       	lpm	r24, Z
     dbe:	81 11       	cpse	r24, r1
     dc0:	24 c0       	rjmp	.+72     	; 0xe0a <__stack+0x50b>
     dc2:	55 20       	and	r5, r5
     dc4:	09 f4       	brne	.+2      	; 0xdc8 <__stack+0x4c9>
     dc6:	e4 cc       	rjmp	.-1592   	; 0x790 <vfprintf+0x58>
     dc8:	b7 01       	movw	r22, r14
     dca:	80 e2       	ldi	r24, 0x20	; 32
     dcc:	90 e0       	ldi	r25, 0x00	; 0
     dce:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     dd2:	5a 94       	dec	r5
     dd4:	f6 cf       	rjmp	.-20     	; 0xdc2 <__stack+0x4c3>
     dd6:	f7 01       	movw	r30, r14
     dd8:	86 81       	ldd	r24, Z+6	; 0x06
     dda:	97 81       	ldd	r25, Z+7	; 0x07
     ddc:	26 c0       	rjmp	.+76     	; 0xe2a <__stack+0x52b>
     dde:	8f ef       	ldi	r24, 0xFF	; 255
     de0:	9f ef       	ldi	r25, 0xFF	; 255
     de2:	23 c0       	rjmp	.+70     	; 0xe2a <__stack+0x52b>
     de4:	b7 01       	movw	r22, r14
     de6:	80 e2       	ldi	r24, 0x20	; 32
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     dee:	5a 94       	dec	r5
     df0:	51 10       	cpse	r5, r1
     df2:	f8 cf       	rjmp	.-16     	; 0xde4 <__stack+0x4e5>
     df4:	d8 cf       	rjmp	.-80     	; 0xda6 <__stack+0x4a7>
     df6:	51 2c       	mov	r5, r1
     df8:	b7 01       	movw	r22, r14
     dfa:	80 2f       	mov	r24, r16
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     e02:	d3 cf       	rjmp	.-90     	; 0xdaa <__stack+0x4ab>
     e04:	0c e6       	ldi	r16, 0x6C	; 108
     e06:	10 e0       	ldi	r17, 0x00	; 0
     e08:	d5 cf       	rjmp	.-86     	; 0xdb4 <__stack+0x4b5>
     e0a:	91 10       	cpse	r9, r1
     e0c:	80 52       	subi	r24, 0x20	; 32
     e0e:	b7 01       	movw	r22, r14
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	0e 94 3e 08 	call	0x107c	; 0x107c <fputc>
     e16:	0f 5f       	subi	r16, 0xFF	; 255
     e18:	1f 4f       	sbci	r17, 0xFF	; 255
     e1a:	cf cf       	rjmp	.-98     	; 0xdba <__stack+0x4bb>
     e1c:	23 e0       	ldi	r18, 0x03	; 3
     e1e:	25 15       	cp	r18, r5
     e20:	10 f4       	brcc	.+4      	; 0xe26 <__stack+0x527>
     e22:	83 e0       	ldi	r24, 0x03	; 3
     e24:	bd cf       	rjmp	.-134    	; 0xda0 <__stack+0x4a1>
     e26:	51 2c       	mov	r5, r1
     e28:	c0 cf       	rjmp	.-128    	; 0xdaa <__stack+0x4ab>
     e2a:	60 96       	adiw	r28, 0x10	; 16
     e2c:	e2 e1       	ldi	r30, 0x12	; 18
     e2e:	0c 94 35 07 	jmp	0xe6a	; 0xe6a <__epilogue_restores__>

00000e32 <__prologue_saves__>:
     e32:	2f 92       	push	r2
     e34:	3f 92       	push	r3
     e36:	4f 92       	push	r4
     e38:	5f 92       	push	r5
     e3a:	6f 92       	push	r6
     e3c:	7f 92       	push	r7
     e3e:	8f 92       	push	r8
     e40:	9f 92       	push	r9
     e42:	af 92       	push	r10
     e44:	bf 92       	push	r11
     e46:	cf 92       	push	r12
     e48:	df 92       	push	r13
     e4a:	ef 92       	push	r14
     e4c:	ff 92       	push	r15
     e4e:	0f 93       	push	r16
     e50:	1f 93       	push	r17
     e52:	cf 93       	push	r28
     e54:	df 93       	push	r29
     e56:	cd b7       	in	r28, 0x3d	; 61
     e58:	de b7       	in	r29, 0x3e	; 62
     e5a:	ca 1b       	sub	r28, r26
     e5c:	db 0b       	sbc	r29, r27
     e5e:	0f b6       	in	r0, 0x3f	; 63
     e60:	f8 94       	cli
     e62:	de bf       	out	0x3e, r29	; 62
     e64:	0f be       	out	0x3f, r0	; 63
     e66:	cd bf       	out	0x3d, r28	; 61
     e68:	09 94       	ijmp

00000e6a <__epilogue_restores__>:
     e6a:	2a 88       	ldd	r2, Y+18	; 0x12
     e6c:	39 88       	ldd	r3, Y+17	; 0x11
     e6e:	48 88       	ldd	r4, Y+16	; 0x10
     e70:	5f 84       	ldd	r5, Y+15	; 0x0f
     e72:	6e 84       	ldd	r6, Y+14	; 0x0e
     e74:	7d 84       	ldd	r7, Y+13	; 0x0d
     e76:	8c 84       	ldd	r8, Y+12	; 0x0c
     e78:	9b 84       	ldd	r9, Y+11	; 0x0b
     e7a:	aa 84       	ldd	r10, Y+10	; 0x0a
     e7c:	b9 84       	ldd	r11, Y+9	; 0x09
     e7e:	c8 84       	ldd	r12, Y+8	; 0x08
     e80:	df 80       	ldd	r13, Y+7	; 0x07
     e82:	ee 80       	ldd	r14, Y+6	; 0x06
     e84:	fd 80       	ldd	r15, Y+5	; 0x05
     e86:	0c 81       	ldd	r16, Y+4	; 0x04
     e88:	1b 81       	ldd	r17, Y+3	; 0x03
     e8a:	aa 81       	ldd	r26, Y+2	; 0x02
     e8c:	b9 81       	ldd	r27, Y+1	; 0x01
     e8e:	ce 0f       	add	r28, r30
     e90:	d1 1d       	adc	r29, r1
     e92:	0f b6       	in	r0, 0x3f	; 63
     e94:	f8 94       	cli
     e96:	de bf       	out	0x3e, r29	; 62
     e98:	0f be       	out	0x3f, r0	; 63
     e9a:	cd bf       	out	0x3d, r28	; 61
     e9c:	ed 01       	movw	r28, r26
     e9e:	08 95       	ret

00000ea0 <__ftoa_engine>:
     ea0:	28 30       	cpi	r18, 0x08	; 8
     ea2:	08 f0       	brcs	.+2      	; 0xea6 <__ftoa_engine+0x6>
     ea4:	27 e0       	ldi	r18, 0x07	; 7
     ea6:	33 27       	eor	r19, r19
     ea8:	da 01       	movw	r26, r20
     eaa:	99 0f       	add	r25, r25
     eac:	31 1d       	adc	r19, r1
     eae:	87 fd       	sbrc	r24, 7
     eb0:	91 60       	ori	r25, 0x01	; 1
     eb2:	00 96       	adiw	r24, 0x00	; 0
     eb4:	61 05       	cpc	r22, r1
     eb6:	71 05       	cpc	r23, r1
     eb8:	39 f4       	brne	.+14     	; 0xec8 <__ftoa_engine+0x28>
     eba:	32 60       	ori	r19, 0x02	; 2
     ebc:	2e 5f       	subi	r18, 0xFE	; 254
     ebe:	3d 93       	st	X+, r19
     ec0:	30 e3       	ldi	r19, 0x30	; 48
     ec2:	2a 95       	dec	r18
     ec4:	e1 f7       	brne	.-8      	; 0xebe <__ftoa_engine+0x1e>
     ec6:	08 95       	ret
     ec8:	9f 3f       	cpi	r25, 0xFF	; 255
     eca:	30 f0       	brcs	.+12     	; 0xed8 <__ftoa_engine+0x38>
     ecc:	80 38       	cpi	r24, 0x80	; 128
     ece:	71 05       	cpc	r23, r1
     ed0:	61 05       	cpc	r22, r1
     ed2:	09 f0       	breq	.+2      	; 0xed6 <__ftoa_engine+0x36>
     ed4:	3c 5f       	subi	r19, 0xFC	; 252
     ed6:	3c 5f       	subi	r19, 0xFC	; 252
     ed8:	3d 93       	st	X+, r19
     eda:	91 30       	cpi	r25, 0x01	; 1
     edc:	08 f0       	brcs	.+2      	; 0xee0 <__ftoa_engine+0x40>
     ede:	80 68       	ori	r24, 0x80	; 128
     ee0:	91 1d       	adc	r25, r1
     ee2:	df 93       	push	r29
     ee4:	cf 93       	push	r28
     ee6:	1f 93       	push	r17
     ee8:	0f 93       	push	r16
     eea:	ff 92       	push	r15
     eec:	ef 92       	push	r14
     eee:	19 2f       	mov	r17, r25
     ef0:	98 7f       	andi	r25, 0xF8	; 248
     ef2:	96 95       	lsr	r25
     ef4:	e9 2f       	mov	r30, r25
     ef6:	96 95       	lsr	r25
     ef8:	96 95       	lsr	r25
     efa:	e9 0f       	add	r30, r25
     efc:	ff 27       	eor	r31, r31
     efe:	e6 53       	subi	r30, 0x36	; 54
     f00:	ff 4f       	sbci	r31, 0xFF	; 255
     f02:	99 27       	eor	r25, r25
     f04:	33 27       	eor	r19, r19
     f06:	ee 24       	eor	r14, r14
     f08:	ff 24       	eor	r15, r15
     f0a:	a7 01       	movw	r20, r14
     f0c:	e7 01       	movw	r28, r14
     f0e:	05 90       	lpm	r0, Z+
     f10:	08 94       	sec
     f12:	07 94       	ror	r0
     f14:	28 f4       	brcc	.+10     	; 0xf20 <__ftoa_engine+0x80>
     f16:	36 0f       	add	r19, r22
     f18:	e7 1e       	adc	r14, r23
     f1a:	f8 1e       	adc	r15, r24
     f1c:	49 1f       	adc	r20, r25
     f1e:	51 1d       	adc	r21, r1
     f20:	66 0f       	add	r22, r22
     f22:	77 1f       	adc	r23, r23
     f24:	88 1f       	adc	r24, r24
     f26:	99 1f       	adc	r25, r25
     f28:	06 94       	lsr	r0
     f2a:	a1 f7       	brne	.-24     	; 0xf14 <__ftoa_engine+0x74>
     f2c:	05 90       	lpm	r0, Z+
     f2e:	07 94       	ror	r0
     f30:	28 f4       	brcc	.+10     	; 0xf3c <__ftoa_engine+0x9c>
     f32:	e7 0e       	add	r14, r23
     f34:	f8 1e       	adc	r15, r24
     f36:	49 1f       	adc	r20, r25
     f38:	56 1f       	adc	r21, r22
     f3a:	c1 1d       	adc	r28, r1
     f3c:	77 0f       	add	r23, r23
     f3e:	88 1f       	adc	r24, r24
     f40:	99 1f       	adc	r25, r25
     f42:	66 1f       	adc	r22, r22
     f44:	06 94       	lsr	r0
     f46:	a1 f7       	brne	.-24     	; 0xf30 <__ftoa_engine+0x90>
     f48:	05 90       	lpm	r0, Z+
     f4a:	07 94       	ror	r0
     f4c:	28 f4       	brcc	.+10     	; 0xf58 <__ftoa_engine+0xb8>
     f4e:	f8 0e       	add	r15, r24
     f50:	49 1f       	adc	r20, r25
     f52:	56 1f       	adc	r21, r22
     f54:	c7 1f       	adc	r28, r23
     f56:	d1 1d       	adc	r29, r1
     f58:	88 0f       	add	r24, r24
     f5a:	99 1f       	adc	r25, r25
     f5c:	66 1f       	adc	r22, r22
     f5e:	77 1f       	adc	r23, r23
     f60:	06 94       	lsr	r0
     f62:	a1 f7       	brne	.-24     	; 0xf4c <__ftoa_engine+0xac>
     f64:	05 90       	lpm	r0, Z+
     f66:	07 94       	ror	r0
     f68:	20 f4       	brcc	.+8      	; 0xf72 <__ftoa_engine+0xd2>
     f6a:	49 0f       	add	r20, r25
     f6c:	56 1f       	adc	r21, r22
     f6e:	c7 1f       	adc	r28, r23
     f70:	d8 1f       	adc	r29, r24
     f72:	99 0f       	add	r25, r25
     f74:	66 1f       	adc	r22, r22
     f76:	77 1f       	adc	r23, r23
     f78:	88 1f       	adc	r24, r24
     f7a:	06 94       	lsr	r0
     f7c:	a9 f7       	brne	.-22     	; 0xf68 <__ftoa_engine+0xc8>
     f7e:	84 91       	lpm	r24, Z
     f80:	10 95       	com	r17
     f82:	17 70       	andi	r17, 0x07	; 7
     f84:	41 f0       	breq	.+16     	; 0xf96 <__ftoa_engine+0xf6>
     f86:	d6 95       	lsr	r29
     f88:	c7 95       	ror	r28
     f8a:	57 95       	ror	r21
     f8c:	47 95       	ror	r20
     f8e:	f7 94       	ror	r15
     f90:	e7 94       	ror	r14
     f92:	1a 95       	dec	r17
     f94:	c1 f7       	brne	.-16     	; 0xf86 <__ftoa_engine+0xe6>
     f96:	e0 e7       	ldi	r30, 0x70	; 112
     f98:	f0 e0       	ldi	r31, 0x00	; 0
     f9a:	68 94       	set
     f9c:	15 90       	lpm	r1, Z+
     f9e:	15 91       	lpm	r17, Z+
     fa0:	35 91       	lpm	r19, Z+
     fa2:	65 91       	lpm	r22, Z+
     fa4:	95 91       	lpm	r25, Z+
     fa6:	05 90       	lpm	r0, Z+
     fa8:	7f e2       	ldi	r23, 0x2F	; 47
     faa:	73 95       	inc	r23
     fac:	e1 18       	sub	r14, r1
     fae:	f1 0a       	sbc	r15, r17
     fb0:	43 0b       	sbc	r20, r19
     fb2:	56 0b       	sbc	r21, r22
     fb4:	c9 0b       	sbc	r28, r25
     fb6:	d0 09       	sbc	r29, r0
     fb8:	c0 f7       	brcc	.-16     	; 0xfaa <__ftoa_engine+0x10a>
     fba:	e1 0c       	add	r14, r1
     fbc:	f1 1e       	adc	r15, r17
     fbe:	43 1f       	adc	r20, r19
     fc0:	56 1f       	adc	r21, r22
     fc2:	c9 1f       	adc	r28, r25
     fc4:	d0 1d       	adc	r29, r0
     fc6:	7e f4       	brtc	.+30     	; 0xfe6 <__ftoa_engine+0x146>
     fc8:	70 33       	cpi	r23, 0x30	; 48
     fca:	11 f4       	brne	.+4      	; 0xfd0 <__ftoa_engine+0x130>
     fcc:	8a 95       	dec	r24
     fce:	e6 cf       	rjmp	.-52     	; 0xf9c <__ftoa_engine+0xfc>
     fd0:	e8 94       	clt
     fd2:	01 50       	subi	r16, 0x01	; 1
     fd4:	30 f0       	brcs	.+12     	; 0xfe2 <__ftoa_engine+0x142>
     fd6:	08 0f       	add	r16, r24
     fd8:	0a f4       	brpl	.+2      	; 0xfdc <__ftoa_engine+0x13c>
     fda:	00 27       	eor	r16, r16
     fdc:	02 17       	cp	r16, r18
     fde:	08 f4       	brcc	.+2      	; 0xfe2 <__ftoa_engine+0x142>
     fe0:	20 2f       	mov	r18, r16
     fe2:	23 95       	inc	r18
     fe4:	02 2f       	mov	r16, r18
     fe6:	7a 33       	cpi	r23, 0x3A	; 58
     fe8:	28 f0       	brcs	.+10     	; 0xff4 <__ftoa_engine+0x154>
     fea:	79 e3       	ldi	r23, 0x39	; 57
     fec:	7d 93       	st	X+, r23
     fee:	2a 95       	dec	r18
     ff0:	e9 f7       	brne	.-6      	; 0xfec <__ftoa_engine+0x14c>
     ff2:	10 c0       	rjmp	.+32     	; 0x1014 <__ftoa_engine+0x174>
     ff4:	7d 93       	st	X+, r23
     ff6:	2a 95       	dec	r18
     ff8:	89 f6       	brne	.-94     	; 0xf9c <__ftoa_engine+0xfc>
     ffa:	06 94       	lsr	r0
     ffc:	97 95       	ror	r25
     ffe:	67 95       	ror	r22
    1000:	37 95       	ror	r19
    1002:	17 95       	ror	r17
    1004:	17 94       	ror	r1
    1006:	e1 18       	sub	r14, r1
    1008:	f1 0a       	sbc	r15, r17
    100a:	43 0b       	sbc	r20, r19
    100c:	56 0b       	sbc	r21, r22
    100e:	c9 0b       	sbc	r28, r25
    1010:	d0 09       	sbc	r29, r0
    1012:	98 f0       	brcs	.+38     	; 0x103a <__ftoa_engine+0x19a>
    1014:	23 95       	inc	r18
    1016:	7e 91       	ld	r23, -X
    1018:	73 95       	inc	r23
    101a:	7a 33       	cpi	r23, 0x3A	; 58
    101c:	08 f0       	brcs	.+2      	; 0x1020 <__ftoa_engine+0x180>
    101e:	70 e3       	ldi	r23, 0x30	; 48
    1020:	7c 93       	st	X, r23
    1022:	20 13       	cpse	r18, r16
    1024:	b8 f7       	brcc	.-18     	; 0x1014 <__ftoa_engine+0x174>
    1026:	7e 91       	ld	r23, -X
    1028:	70 61       	ori	r23, 0x10	; 16
    102a:	7d 93       	st	X+, r23
    102c:	30 f0       	brcs	.+12     	; 0x103a <__ftoa_engine+0x19a>
    102e:	83 95       	inc	r24
    1030:	71 e3       	ldi	r23, 0x31	; 49
    1032:	7d 93       	st	X+, r23
    1034:	70 e3       	ldi	r23, 0x30	; 48
    1036:	2a 95       	dec	r18
    1038:	e1 f7       	brne	.-8      	; 0x1032 <__ftoa_engine+0x192>
    103a:	11 24       	eor	r1, r1
    103c:	ef 90       	pop	r14
    103e:	ff 90       	pop	r15
    1040:	0f 91       	pop	r16
    1042:	1f 91       	pop	r17
    1044:	cf 91       	pop	r28
    1046:	df 91       	pop	r29
    1048:	99 27       	eor	r25, r25
    104a:	87 fd       	sbrc	r24, 7
    104c:	90 95       	com	r25
    104e:	08 95       	ret

00001050 <strnlen_P>:
    1050:	fc 01       	movw	r30, r24
    1052:	05 90       	lpm	r0, Z+
    1054:	61 50       	subi	r22, 0x01	; 1
    1056:	70 40       	sbci	r23, 0x00	; 0
    1058:	01 10       	cpse	r0, r1
    105a:	d8 f7       	brcc	.-10     	; 0x1052 <strnlen_P+0x2>
    105c:	80 95       	com	r24
    105e:	90 95       	com	r25
    1060:	8e 0f       	add	r24, r30
    1062:	9f 1f       	adc	r25, r31
    1064:	08 95       	ret

00001066 <strnlen>:
    1066:	fc 01       	movw	r30, r24
    1068:	61 50       	subi	r22, 0x01	; 1
    106a:	70 40       	sbci	r23, 0x00	; 0
    106c:	01 90       	ld	r0, Z+
    106e:	01 10       	cpse	r0, r1
    1070:	d8 f7       	brcc	.-10     	; 0x1068 <strnlen+0x2>
    1072:	80 95       	com	r24
    1074:	90 95       	com	r25
    1076:	8e 0f       	add	r24, r30
    1078:	9f 1f       	adc	r25, r31
    107a:	08 95       	ret

0000107c <fputc>:
    107c:	0f 93       	push	r16
    107e:	1f 93       	push	r17
    1080:	cf 93       	push	r28
    1082:	df 93       	push	r29
    1084:	fb 01       	movw	r30, r22
    1086:	23 81       	ldd	r18, Z+3	; 0x03
    1088:	21 fd       	sbrc	r18, 1
    108a:	03 c0       	rjmp	.+6      	; 0x1092 <fputc+0x16>
    108c:	8f ef       	ldi	r24, 0xFF	; 255
    108e:	9f ef       	ldi	r25, 0xFF	; 255
    1090:	2c c0       	rjmp	.+88     	; 0x10ea <fputc+0x6e>
    1092:	22 ff       	sbrs	r18, 2
    1094:	16 c0       	rjmp	.+44     	; 0x10c2 <fputc+0x46>
    1096:	46 81       	ldd	r20, Z+6	; 0x06
    1098:	57 81       	ldd	r21, Z+7	; 0x07
    109a:	24 81       	ldd	r18, Z+4	; 0x04
    109c:	35 81       	ldd	r19, Z+5	; 0x05
    109e:	42 17       	cp	r20, r18
    10a0:	53 07       	cpc	r21, r19
    10a2:	44 f4       	brge	.+16     	; 0x10b4 <fputc+0x38>
    10a4:	a0 81       	ld	r26, Z
    10a6:	b1 81       	ldd	r27, Z+1	; 0x01
    10a8:	9d 01       	movw	r18, r26
    10aa:	2f 5f       	subi	r18, 0xFF	; 255
    10ac:	3f 4f       	sbci	r19, 0xFF	; 255
    10ae:	31 83       	std	Z+1, r19	; 0x01
    10b0:	20 83       	st	Z, r18
    10b2:	8c 93       	st	X, r24
    10b4:	26 81       	ldd	r18, Z+6	; 0x06
    10b6:	37 81       	ldd	r19, Z+7	; 0x07
    10b8:	2f 5f       	subi	r18, 0xFF	; 255
    10ba:	3f 4f       	sbci	r19, 0xFF	; 255
    10bc:	37 83       	std	Z+7, r19	; 0x07
    10be:	26 83       	std	Z+6, r18	; 0x06
    10c0:	14 c0       	rjmp	.+40     	; 0x10ea <fputc+0x6e>
    10c2:	8b 01       	movw	r16, r22
    10c4:	ec 01       	movw	r28, r24
    10c6:	fb 01       	movw	r30, r22
    10c8:	00 84       	ldd	r0, Z+8	; 0x08
    10ca:	f1 85       	ldd	r31, Z+9	; 0x09
    10cc:	e0 2d       	mov	r30, r0
    10ce:	09 95       	icall
    10d0:	89 2b       	or	r24, r25
    10d2:	e1 f6       	brne	.-72     	; 0x108c <fputc+0x10>
    10d4:	d8 01       	movw	r26, r16
    10d6:	16 96       	adiw	r26, 0x06	; 6
    10d8:	8d 91       	ld	r24, X+
    10da:	9c 91       	ld	r25, X
    10dc:	17 97       	sbiw	r26, 0x07	; 7
    10de:	01 96       	adiw	r24, 0x01	; 1
    10e0:	17 96       	adiw	r26, 0x07	; 7
    10e2:	9c 93       	st	X, r25
    10e4:	8e 93       	st	-X, r24
    10e6:	16 97       	sbiw	r26, 0x06	; 6
    10e8:	ce 01       	movw	r24, r28
    10ea:	df 91       	pop	r29
    10ec:	cf 91       	pop	r28
    10ee:	1f 91       	pop	r17
    10f0:	0f 91       	pop	r16
    10f2:	08 95       	ret

000010f4 <printf>:
    10f4:	a0 e0       	ldi	r26, 0x00	; 0
    10f6:	b0 e0       	ldi	r27, 0x00	; 0
    10f8:	e0 e8       	ldi	r30, 0x80	; 128
    10fa:	f8 e0       	ldi	r31, 0x08	; 8
    10fc:	0c 94 29 07 	jmp	0xe52	; 0xe52 <__prologue_saves__+0x20>
    1100:	ae 01       	movw	r20, r28
    1102:	4b 5f       	subi	r20, 0xFB	; 251
    1104:	5f 4f       	sbci	r21, 0xFF	; 255
    1106:	fa 01       	movw	r30, r20
    1108:	61 91       	ld	r22, Z+
    110a:	71 91       	ld	r23, Z+
    110c:	af 01       	movw	r20, r30
    110e:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <__data_end+0x2>
    1112:	90 91 ed 01 	lds	r25, 0x01ED	; 0x8001ed <__data_end+0x3>
    1116:	0e 94 9c 03 	call	0x738	; 0x738 <vfprintf>
    111a:	e2 e0       	ldi	r30, 0x02	; 2
    111c:	0c 94 45 07 	jmp	0xe8a	; 0xe8a <__epilogue_restores__+0x20>

00001120 <__ultoa_invert>:
    1120:	fa 01       	movw	r30, r20
    1122:	aa 27       	eor	r26, r26
    1124:	28 30       	cpi	r18, 0x08	; 8
    1126:	51 f1       	breq	.+84     	; 0x117c <__ultoa_invert+0x5c>
    1128:	20 31       	cpi	r18, 0x10	; 16
    112a:	81 f1       	breq	.+96     	; 0x118c <__ultoa_invert+0x6c>
    112c:	e8 94       	clt
    112e:	6f 93       	push	r22
    1130:	6e 7f       	andi	r22, 0xFE	; 254
    1132:	6e 5f       	subi	r22, 0xFE	; 254
    1134:	7f 4f       	sbci	r23, 0xFF	; 255
    1136:	8f 4f       	sbci	r24, 0xFF	; 255
    1138:	9f 4f       	sbci	r25, 0xFF	; 255
    113a:	af 4f       	sbci	r26, 0xFF	; 255
    113c:	b1 e0       	ldi	r27, 0x01	; 1
    113e:	3e d0       	rcall	.+124    	; 0x11bc <__ultoa_invert+0x9c>
    1140:	b4 e0       	ldi	r27, 0x04	; 4
    1142:	3c d0       	rcall	.+120    	; 0x11bc <__ultoa_invert+0x9c>
    1144:	67 0f       	add	r22, r23
    1146:	78 1f       	adc	r23, r24
    1148:	89 1f       	adc	r24, r25
    114a:	9a 1f       	adc	r25, r26
    114c:	a1 1d       	adc	r26, r1
    114e:	68 0f       	add	r22, r24
    1150:	79 1f       	adc	r23, r25
    1152:	8a 1f       	adc	r24, r26
    1154:	91 1d       	adc	r25, r1
    1156:	a1 1d       	adc	r26, r1
    1158:	6a 0f       	add	r22, r26
    115a:	71 1d       	adc	r23, r1
    115c:	81 1d       	adc	r24, r1
    115e:	91 1d       	adc	r25, r1
    1160:	a1 1d       	adc	r26, r1
    1162:	20 d0       	rcall	.+64     	; 0x11a4 <__ultoa_invert+0x84>
    1164:	09 f4       	brne	.+2      	; 0x1168 <__ultoa_invert+0x48>
    1166:	68 94       	set
    1168:	3f 91       	pop	r19
    116a:	2a e0       	ldi	r18, 0x0A	; 10
    116c:	26 9f       	mul	r18, r22
    116e:	11 24       	eor	r1, r1
    1170:	30 19       	sub	r19, r0
    1172:	30 5d       	subi	r19, 0xD0	; 208
    1174:	31 93       	st	Z+, r19
    1176:	de f6       	brtc	.-74     	; 0x112e <__ultoa_invert+0xe>
    1178:	cf 01       	movw	r24, r30
    117a:	08 95       	ret
    117c:	46 2f       	mov	r20, r22
    117e:	47 70       	andi	r20, 0x07	; 7
    1180:	40 5d       	subi	r20, 0xD0	; 208
    1182:	41 93       	st	Z+, r20
    1184:	b3 e0       	ldi	r27, 0x03	; 3
    1186:	0f d0       	rcall	.+30     	; 0x11a6 <__ultoa_invert+0x86>
    1188:	c9 f7       	brne	.-14     	; 0x117c <__ultoa_invert+0x5c>
    118a:	f6 cf       	rjmp	.-20     	; 0x1178 <__ultoa_invert+0x58>
    118c:	46 2f       	mov	r20, r22
    118e:	4f 70       	andi	r20, 0x0F	; 15
    1190:	40 5d       	subi	r20, 0xD0	; 208
    1192:	4a 33       	cpi	r20, 0x3A	; 58
    1194:	18 f0       	brcs	.+6      	; 0x119c <__ultoa_invert+0x7c>
    1196:	49 5d       	subi	r20, 0xD9	; 217
    1198:	31 fd       	sbrc	r19, 1
    119a:	40 52       	subi	r20, 0x20	; 32
    119c:	41 93       	st	Z+, r20
    119e:	02 d0       	rcall	.+4      	; 0x11a4 <__ultoa_invert+0x84>
    11a0:	a9 f7       	brne	.-22     	; 0x118c <__ultoa_invert+0x6c>
    11a2:	ea cf       	rjmp	.-44     	; 0x1178 <__ultoa_invert+0x58>
    11a4:	b4 e0       	ldi	r27, 0x04	; 4
    11a6:	a6 95       	lsr	r26
    11a8:	97 95       	ror	r25
    11aa:	87 95       	ror	r24
    11ac:	77 95       	ror	r23
    11ae:	67 95       	ror	r22
    11b0:	ba 95       	dec	r27
    11b2:	c9 f7       	brne	.-14     	; 0x11a6 <__ultoa_invert+0x86>
    11b4:	00 97       	sbiw	r24, 0x00	; 0
    11b6:	61 05       	cpc	r22, r1
    11b8:	71 05       	cpc	r23, r1
    11ba:	08 95       	ret
    11bc:	9b 01       	movw	r18, r22
    11be:	ac 01       	movw	r20, r24
    11c0:	0a 2e       	mov	r0, r26
    11c2:	06 94       	lsr	r0
    11c4:	57 95       	ror	r21
    11c6:	47 95       	ror	r20
    11c8:	37 95       	ror	r19
    11ca:	27 95       	ror	r18
    11cc:	ba 95       	dec	r27
    11ce:	c9 f7       	brne	.-14     	; 0x11c2 <__ultoa_invert+0xa2>
    11d0:	62 0f       	add	r22, r18
    11d2:	73 1f       	adc	r23, r19
    11d4:	84 1f       	adc	r24, r20
    11d6:	95 1f       	adc	r25, r21
    11d8:	a0 1d       	adc	r26, r0
    11da:	08 95       	ret

000011dc <_exit>:
    11dc:	f8 94       	cli

000011de <__stop_program>:
    11de:	ff cf       	rjmp	.-2      	; 0x11de <__stop_program>
